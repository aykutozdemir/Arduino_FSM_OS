<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="FsmOS_8h" kind="file" language="C++">
    <compoundname>FsmOS.h</compoundname>
    <includes local="no">Arduino.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">util/atomic.h</includes>
    <includes local="no">new</includes>
    <includedby refid="FsmOS_8cpp" local="yes">FsmOS.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>FsmOS.h</label>
        <link refid="FsmOS_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Arduino.h</label>
      </node>
      <node id="6">
        <label>new</label>
      </node>
      <node id="3">
        <label>stdarg.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="5">
        <label>util/atomic.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>FsmOS.cpp</label>
        <link refid="FsmOS_8cpp"/>
      </node>
      <node id="1">
        <label>FsmOS.h</label>
        <link refid="FsmOS_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structTaskNode" prot="public">TaskNode</innerclass>
    <innerclass refid="structMemoryStats" prot="public">MemoryStats</innerclass>
    <innerclass refid="structTaskStats" prot="public">TaskStats</innerclass>
    <innerclass refid="structResetInfo" prot="public">ResetInfo</innerclass>
    <innerclass refid="structSystemMemoryInfo" prot="public">SystemMemoryInfo</innerclass>
    <innerclass refid="structTaskMemoryInfo" prot="public">TaskMemoryInfo</innerclass>
    <innerclass refid="classSharedMsg" prot="public">SharedMsg</innerclass>
    <innerclass refid="classMsgDataPool" prot="public">MsgDataPool</innerclass>
    <innerclass refid="classLinkedQueue" prot="public">LinkedQueue</innerclass>
    <innerclass refid="structLinkedQueue_1_1Node" prot="public">LinkedQueue::Node</innerclass>
    <innerclass refid="classMutex" prot="public">Mutex</innerclass>
    <innerclass refid="classSemaphore" prot="public">Semaphore</innerclass>
    <innerclass refid="classTask" prot="public">Task</innerclass>
    <innerclass refid="classScheduler" prot="public">Scheduler</innerclass>
    <innerclass refid="structScheduler_1_1QueuedMessage" prot="private">Scheduler::QueuedMessage</innerclass>
    <innerclass refid="structScheduler_1_1MsgNode" prot="private">Scheduler::MsgNode</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="FsmOS_8h_1aaaea265b31dabcfb3098bec7685c39e4" prot="public" static="no">
        <name>ATOMIC_BLOCK</name>
        <param><defname>type</defname></param>
        <initializer>for (uint8_t _ab_once = 1; _ab_once; _ab_once = 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FsmOS.h" line="48" column="9" bodyfile="FsmOS.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="FsmOS_8h_1a362c18b15a09703e42e1c246c47420ef" prot="public" static="no">
        <name>ATOMIC_RESTORESTATE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FsmOS.h" line="49" column="9" bodyfile="FsmOS.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="FsmOS_8h_1a9f8057007e58750af1de560ba396f6bc" prot="public" static="no">
        <name>FSMOS_STACK_CANARY_MARGIN</name>
        <initializer>32</initializer>
        <briefdescription>
<para>Safety margin (bytes) to keep between stack canary and current stack pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Prevents corruption of active stack frames and ISR stacks </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FsmOS.h" line="58" column="9" bodyfile="FsmOS.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <member refid="group__fsmos_1gac11585cd9be0cb4a8fca05cf0c19adb1" kind="define"><name>TOPIC_BITFIELD_SIZE</name></member>
      <memberdef kind="define" id="FsmOS_8h_1a91bc2cac3c4615c062e7524ba2ea2278" prot="public" static="no">
        <name>MAX_TOPICS</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FsmOS.h" line="79" column="9" bodyfile="FsmOS.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="FsmOS_8h_1addd900ed12192f9ff21848d61476d5f2" prot="public" static="no">
        <name>MAX_MESSAGE_POOL_SIZE</name>
        <initializer>32</initializer>
        <briefdescription>
<para>Forward declaration for <ref refid="classScheduler" kindref="compound">Scheduler</ref> class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FsmOS.h" line="92" column="9" bodyfile="FsmOS.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <member refid="group__fsmos_1gad69a300f3356c3ac65410bbafd9a0dfb" kind="define"><name>RESET_CAUSE_EXTERNAL</name></member>
      <memberdef kind="define" id="FsmOS_8h_1a1725fe610295be64608f3418032d83cf" prot="public" static="no">
        <name>RESET_CAUSE_BROWN_OUT</name>
        <initializer>0x02</initializer>
        <briefdescription>
<para>Brown-out Reset flag (fallback) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FsmOS.h" line="186" column="9" bodyfile="FsmOS.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="FsmOS_8h_1a0fe30f99377de57d909e461a560dee78" prot="public" static="no">
        <name>RESET_CAUSE_POWER_ON</name>
        <initializer>0x04</initializer>
        <briefdescription>
<para>Power-on Reset flag (fallback) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FsmOS.h" line="187" column="9" bodyfile="FsmOS.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="FsmOS_8h_1a8ddfa282a94d5f071d6b99b875d220b7" prot="public" static="no">
        <name>RESET_CAUSE_WATCHDOG</name>
        <initializer>0x08</initializer>
        <briefdescription>
<para>Watchdog Reset flag (fallback) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FsmOS.h" line="188" column="9" bodyfile="FsmOS.h" bodystart="188" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="enum">
      <member refid="group__fsmos_1gaf0e4bd86b7877a41cdb3452dec42904d" kind="enum"><name>ResetCause</name></member>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="FsmOS_8h_1a21f8c866143c5f1a7f2f75113f2652cb" prot="public" static="no">
        <type>uint16_t</type>
        <definition>typedef uint16_t TopicBitfield</definition>
        <argsstring></argsstring>
        <name>TopicBitfield</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FsmOS.h" line="78" column="18" bodyfile="FsmOS.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="FsmOS_8h_1a9f53b37c6d575f1b498359cc429740b0" prot="public" static="no">
        <type>TimerT&lt; uint8_t &gt;</type>
        <definition>using Timer8 =  TimerT&lt;uint8_t&gt;</definition>
        <argsstring></argsstring>
        <name>Timer8</name>
        <briefdescription>
<para>8-bit timer for short durations (0-255ms) </para>
        </briefdescription>
        <detaileddescription>
<para>Uses 2 bytes total memory, ideal for debouncing and short delays </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FsmOS.h" line="269" column="1" bodyfile="FsmOS.h" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="FsmOS_8h_1acc8d5d8e761e9ae66c17be7f7d8ff843" prot="public" static="no">
        <type>TimerT&lt; uint16_t &gt;</type>
        <definition>using Timer16 =  TimerT&lt;uint16_t&gt;</definition>
        <argsstring></argsstring>
        <name>Timer16</name>
        <briefdescription>
<para>16-bit timer for medium durations (0-65535ms) </para>
        </briefdescription>
        <detaileddescription>
<para>Uses 4 bytes total memory, ideal for most timing needs </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FsmOS.h" line="275" column="1" bodyfile="FsmOS.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="FsmOS_8h_1acce064b0f024fed7c7008c84a000538f" prot="public" static="no">
        <type>TimerT&lt; uint32_t &gt;</type>
        <definition>using Timer32 =  TimerT&lt;uint32_t&gt;</definition>
        <argsstring></argsstring>
        <name>Timer32</name>
        <briefdescription>
<para>32-bit timer for long durations (0-4294967295ms) </para>
        </briefdescription>
        <detaileddescription>
<para>Uses 8 bytes total memory, for very long timing requirements </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FsmOS.h" line="281" column="1" bodyfile="FsmOS.h" bodystart="281" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <member refid="group__fsmos_1ga5c3f1eb0aa79f56d91fdbf8fd9f1b911" kind="variable"><name>DEFAULT_TASK_MESSAGE_BUDGET</name></member>
      <member refid="group__fsmos_1ga990d37c1e9d0a35fead6ab92e0da955e" kind="variable"><name>OS</name></member>
      <member refid="group__fsmos_1gac154c550db4c5b7fed1b1fd1e31a63ee" kind="variable"><name>DEFAULT_TASK_PERIOD</name></member>
      <member refid="group__fsmos_1ga13157fca65016a2c6c913eff0119cf5c" kind="variable"><name>MIN_TASK_PERIOD</name></member>
      <member refid="group__fsmos_1gab0cd97b1506816b7e089447cd3430e65" kind="variable"><name>MAX_TASK_PERIOD</name></member>
    </sectiondef>
    <sectiondef kind="func">
      <member refid="group__fsmos_1gaa273e9811fbe7bee8c5bc7ec1f5d0ec5" kind="function"><name>__attribute__</name></member>
      <member refid="group__fsmos_1ga1e4e0284f7996d8015ca2b268608904a" kind="function"><name>__attribute__</name></member>
      <member refid="group__fsmos_1gac6c8dbf1f133ab906d0f3490e0de5d74" kind="function"><name>logDebugf</name></member>
      <member refid="group__fsmos_1ga0fd80592a7d1d2fd9b1b52081a8d69cb" kind="function"><name>logInfof</name></member>
      <member refid="group__fsmos_1ga58264bc1f779d2cd6cb6a8c733a17a21" kind="function"><name>logWarnf</name></member>
      <member refid="group__fsmos_1gade3c130d653bf887af5b2f6120f388ad" kind="function"><name>logErrorf</name></member>
    </sectiondef>
    <briefdescription>
<para>A lightweight cooperative task scheduler for Arduino. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Aykut Özdemir <ulink url="mailto:aykutozdemirgyte@gmail.com">aykutozdemirgyte@gmail.com</ulink> </para>
</simplesect>
<simplesect kind="date"><para>2025-10-02</para>
</simplesect>
FsmOS provides a simple, memory-efficient task scheduler for Arduino, supporting cooperative multitasking, message passing, and system monitoring.</para>
<para>Key features:<itemizedlist>
<listitem><para>Cooperative task scheduling with configurable periods</para>
</listitem><listitem><para>Inter-task communication through messages and events</para>
</listitem><listitem><para>Dynamic task creation and deletion</para>
</listitem><listitem><para>Memory management and monitoring</para>
</listitem><listitem><para>System diagnostics and profiling</para>
</listitem><listitem><para>Logging system with multiple levels</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="note"><para>This library is designed for AVR-based Arduino boards but includes partial support for other architectures.</para>
</simplesect>
<simplesect kind="version"><para>1.3.0 - Major refactoring and code organization </para>
</simplesect>
<simplesect kind="copyright"><para>2025 Aykut Özdemir <ulink url="mailto:aykutozdemirgyte@gmail.com">aykutozdemirgyte@gmail.com</ulink> </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FSMOS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMOS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>==================<sp/>Core<sp/>Dependencies<sp/>==================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Arduino.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;util/atomic.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>ATOMIC_BLOCK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;new&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>placement<sp/>new<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__AVR__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avr/io.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>GPIOR0<sp/>and<sp/>MCUSR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avr/wdt.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>watchdog<sp/>timer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fallback<sp/>for<sp/>non-AVR<sp/>platforms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="FsmOS_8h_1aaaea265b31dabcfb3098bec7685c39e4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ATOMIC_BLOCK(type)<sp/>for<sp/>(uint8_t<sp/>_ab_once<sp/>=<sp/>1;<sp/>_ab_once;<sp/>_ab_once<sp/>=<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="FsmOS_8h_1a362c18b15a09703e42e1c246c47420ef" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ATOMIC_RESTORESTATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>==================<sp/>Stack<sp/>Canary<sp/>Configuration<sp/>==================</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor">#ifndef<sp/>FSMOS_STACK_CANARY_MARGIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="FsmOS_8h_1a9f8057007e58750af1de560ba396f6bc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FSMOS_STACK_CANARY_MARGIN<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TOPIC_BITFIELD_SIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="group__fsmos_1gac11585cd9be0cb4a8fca05cf0c19adb1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOPIC_BITFIELD_SIZE<sp/>16<sp/><sp/></highlight><highlight class="comment">//<sp/>Default:<sp/>16-bit<sp/>bitfield</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Bitfield<sp/>type<sp/>selection<sp/>based<sp/>on<sp/>define</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TOPIC_BITFIELD_SIZE<sp/>&lt;=<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="FsmOS_8h_1a21f8c866143c5f1a7f2f75113f2652cb" kindref="member">TopicBitfield</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_TOPICS<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>TOPIC_BITFIELD_SIZE<sp/>&lt;=<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="group__fsmos_1gaa273e9811fbe7bee8c5bc7ec1f5d0ec5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="FsmOS_8h_1a21f8c866143c5f1a7f2f75113f2652cb" kindref="member">TopicBitfield</ref>;</highlight></codeline>
<codeline lineno="79" refid="FsmOS_8h_1a91bc2cac3c4615c062e7524ba2ea2278" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_TOPICS<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>TOPIC_BITFIELD_SIZE<sp/>&lt;=<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="FsmOS_8h_1a21f8c866143c5f1a7f2f75113f2652cb" kindref="member">TopicBitfield</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_TOPICS<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;TOPIC_BITFIELD_SIZE<sp/>must<sp/>be<sp/>8,<sp/>16,<sp/>or<sp/>32&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>==================<sp/>Forward<sp/>Declarations<sp/>==================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classTask" kindref="compound">Task</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classScheduler" kindref="compound">Scheduler</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/>==================<sp/>Message<sp/>Queue<sp/>Constants<sp/>(must<sp/>appear<sp/>before<sp/>use)<sp/>==================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MAX_MESSAGE_POOL_SIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="FsmOS_8h_1addd900ed12192f9ff21848d61476d5f2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_MESSAGE_POOL_SIZE<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>==================<sp/>Task<sp/>Node<sp/>Structure<sp/>==================<sp/>*/</highlight></codeline>
<codeline lineno="100" refid="structTaskNode" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structTaskNode" kindref="compound">TaskNode</ref></highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102" refid="structTaskNode_1a04f109a440464fd95c18d0f3758ee0af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTask" kindref="compound">Task</ref><sp/>*<ref refid="structTaskNode_1a04f109a440464fd95c18d0f3758ee0af" kindref="member">task</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103" refid="structTaskNode_1af6f74dbb5d2baa80d10dabc43b593ffd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTaskNode" kindref="compound">TaskNode</ref><sp/>*<ref refid="structTaskNode_1af6f74dbb5d2baa80d10dabc43b593ffd" kindref="member">next</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="structTaskNode_1a0d859f161eaee61a367a76f70687f89a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTaskNode_1a0d859f161eaee61a367a76f70687f89a" kindref="member">TaskNode</ref>(<ref refid="classTask" kindref="compound">Task</ref><sp/>*t)<sp/>:<sp/><ref refid="structTaskNode_1a04f109a440464fd95c18d0f3758ee0af" kindref="member">task</ref>(t),<sp/><ref refid="structTaskNode_1af6f74dbb5d2baa80d10dabc43b593ffd" kindref="member">next</ref>(nullptr)<sp/>{}</highlight></codeline>
<codeline lineno="106"><highlight class="normal">};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>==================<sp/>Additional<sp/>Types<sp/>and<sp/>Structures<sp/>==================<sp/>*/</highlight></codeline>
<codeline lineno="114" refid="structMemoryStats" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structMemoryStats" kindref="compound">MemoryStats</ref></highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116" refid="structMemoryStats_1ad400667b2264e48d954b2feee8833f4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structMemoryStats_1ad400667b2264e48d954b2feee8833f4a" kindref="member">total_allocated</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="117" refid="structMemoryStats_1aaefab979deb1c98218e9267d198de4fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structMemoryStats_1aaefab979deb1c98218e9267d198de4fe" kindref="member">total_freed</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118" refid="structMemoryStats_1ab27f5b00f150919cd24828e4f3136357" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structMemoryStats_1ab27f5b00f150919cd24828e4f3136357" kindref="member">peak_usage</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119" refid="structMemoryStats_1a66c3d8d757e4fcd55403c904fa4cb0d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structMemoryStats_1a66c3d8d757e4fcd55403c904fa4cb0d5" kindref="member">current_usage</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal">};</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="structTaskStats" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structTaskStats" kindref="compound">TaskStats</ref></highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129" refid="structTaskStats_1a1fc9ad09023166819ea34a6c9e00a956" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structTaskStats_1a1fc9ad09023166819ea34a6c9e00a956" kindref="member">taskId</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130" refid="structTaskStats_1acee85734ca75baa7fe01cad1c24fc34b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__FlashStringHelper<sp/>*<ref refid="structTaskStats_1acee85734ca75baa7fe01cad1c24fc34b" kindref="member">name</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131" refid="structTaskStats_1ad14bdd478708018fae0f1bbceb19d2d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structTaskStats_1ad14bdd478708018fae0f1bbceb19d2d0" kindref="member">state</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132" refid="structTaskStats_1a28271d6c20d6bfccfea9f21fcdb7dd63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structTaskStats_1a28271d6c20d6bfccfea9f21fcdb7dd63" kindref="member">periodMs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133" refid="structTaskStats_1a434524846cef9e3a82b15d7f7b5d439d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structTaskStats_1a434524846cef9e3a82b15d7f7b5d439d" kindref="member">priority</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134" refid="structTaskStats_1afb9812d3db56b4a74e3534a0b1046b8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structTaskStats_1afb9812d3db56b4a74e3534a0b1046b8c" kindref="member">runCount</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135" refid="structTaskStats_1a922dffb9309c234de882457919f7cb66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structTaskStats_1a922dffb9309c234de882457919f7cb66" kindref="member">maxExecTimeUs</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="136" refid="structTaskStats_1a68e1e0b13b6fc7e48ac77f22bc338492" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structTaskStats_1a68e1e0b13b6fc7e48ac77f22bc338492" kindref="member">totalExecTimeUs</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="137" refid="structTaskStats_1ab319b8455c244af5111b6c2e395ffad9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structTaskStats_1ab319b8455c244af5111b6c2e395ffad9" kindref="member">stackUsage</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138" refid="structTaskStats_1abbf27ee4cb7f8272b150152df12c3da0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structTaskStats_1abbf27ee4cb7f8272b150152df12c3da0" kindref="member">delayCount</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="139" refid="structTaskStats_1ac2ef063a104bca4c81457a8db057a51a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structTaskStats_1ac2ef063a104bca4c81457a8db057a51a" kindref="member">maxDelayMs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal">};</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="structResetInfo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structResetInfo" kindref="compound">ResetInfo</ref></highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149" refid="structResetInfo_1a4a91d356cc432144cd170d8e26e33a44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structResetInfo_1a4a91d356cc432144cd170d8e26e33a44" kindref="member">resetReason</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="150" refid="structResetInfo_1ae2c739e645762e75b0137ecf4edcaea8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structResetInfo_1ae2c739e645762e75b0137ecf4edcaea8" kindref="member">resetTime</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="151" refid="structResetInfo_1a99e40fbce39ff24b43a4fc1c2d44a81c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structResetInfo_1a99e40fbce39ff24b43a4fc1c2d44a81c" kindref="member">watchdogTimeout</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="152" refid="structResetInfo_1a8969cb34a6ef24088d2e647a121cd878" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structResetInfo_1a8969cb34a6ef24088d2e647a121cd878" kindref="member">lastTaskId</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Optiboot<sp/>reset<sp/>flag<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="structResetInfo_1ad979eaae9cfc3f1cf959811b090194b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structResetInfo_1ad979eaae9cfc3f1cf959811b090194b5" kindref="member">optibootResetFlags</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="156" refid="structResetInfo_1a05874fdc762c1aa26bd60d8d16e2cc7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structResetInfo_1a05874fdc762c1aa26bd60d8d16e2cc7b" kindref="member">optibootResetCause</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal">};</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="group__fsmos_1gaf0e4bd86b7877a41cdb3452dec42904d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__fsmos_1gaf0e4bd86b7877a41cdb3452dec42904d" kindref="member">ResetCause</ref></highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166" refid="group__fsmos_1ggaf0e4bd86b7877a41cdb3452dec42904da8bf9995e300055d0078c4a09dfe0c883" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__fsmos_1ggaf0e4bd86b7877a41cdb3452dec42904da8bf9995e300055d0078c4a09dfe0c883" kindref="member">RESET_UNKNOWN</ref><sp/>=<sp/>0,<sp/><sp/></highlight></codeline>
<codeline lineno="167" refid="group__fsmos_1ggaf0e4bd86b7877a41cdb3452dec42904da37c7f4bc95e2b9679583655a8090880e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__fsmos_1ggaf0e4bd86b7877a41cdb3452dec42904da37c7f4bc95e2b9679583655a8090880e" kindref="member">RESET_POWER_ON</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="168" refid="group__fsmos_1ggaf0e4bd86b7877a41cdb3452dec42904da187c6b01e1cfc544ee25193f43790323" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__fsmos_1ggaf0e4bd86b7877a41cdb3452dec42904da187c6b01e1cfc544ee25193f43790323" kindref="member">RESET_EXTERNAL</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="169" refid="group__fsmos_1ggaf0e4bd86b7877a41cdb3452dec42904da3ab8379425c9a63d5a64c2687968d3a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__fsmos_1ggaf0e4bd86b7877a41cdb3452dec42904da3ab8379425c9a63d5a64c2687968d3a1" kindref="member">RESET_BROWN_OUT</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="170" refid="group__fsmos_1ggaf0e4bd86b7877a41cdb3452dec42904da9777f5f16727a14c3ccd7601fb09da6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__fsmos_1ggaf0e4bd86b7877a41cdb3452dec42904da9777f5f16727a14c3ccd7601fb09da6d" kindref="member">RESET_WATCHDOG</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__fsmos_1ggaf0e4bd86b7877a41cdb3452dec42904dac94fa96c03ded460233a532ab79a089b" kindref="member">RESET_MULTIPLE</ref><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="172" refid="group__fsmos_1ggaf0e4bd86b7877a41cdb3452dec42904dac94fa96c03ded460233a532ab79a089b" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__AVR__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESET_CAUSE_EXTERNAL<sp/>(1<sp/>&lt;&lt;<sp/>EXTRF)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESET_CAUSE_BROWN_OUT<sp/>(1<sp/>&lt;&lt;<sp/>BORF)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESET_CAUSE_POWER_ON<sp/>(1<sp/>&lt;&lt;<sp/>PORF)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESET_CAUSE_WATCHDOG<sp/>(1<sp/>&lt;&lt;<sp/>WDRF)<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="group__fsmos_1gad69a300f3356c3ac65410bbafd9a0dfb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESET_CAUSE_EXTERNAL<sp/>0x01<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="FsmOS_8h_1a1725fe610295be64608f3418032d83cf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESET_CAUSE_BROWN_OUT<sp/>0x02<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="FsmOS_8h_1a0fe30f99377de57d909e461a560dee78" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESET_CAUSE_POWER_ON<sp/>0x04<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="FsmOS_8h_1a8ddfa282a94d5f071d6b99b875d220b7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESET_CAUSE_WATCHDOG<sp/>0x08<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="structSystemMemoryInfo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structSystemMemoryInfo" kindref="compound">SystemMemoryInfo</ref></highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198" refid="structSystemMemoryInfo_1a3fead35bc0c51a87ca8cb5630eea2fe6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structSystemMemoryInfo_1a3fead35bc0c51a87ca8cb5630eea2fe6" kindref="member">freeRam</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="199" refid="structSystemMemoryInfo_1a74fd6f112cb2a361579343bc609ba3bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structSystemMemoryInfo_1a74fd6f112cb2a361579343bc609ba3bd" kindref="member">totalRam</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="200" refid="structSystemMemoryInfo_1ab46e008190c5d4dc58a098653fc96e21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structSystemMemoryInfo_1ab46e008190c5d4dc58a098653fc96e21" kindref="member">heapSize</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="201" refid="structSystemMemoryInfo_1aafc733c82678f25b4579ac80ff3f3416" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structSystemMemoryInfo_1aafc733c82678f25b4579ac80ff3f3416" kindref="member">largestBlock</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202" refid="structSystemMemoryInfo_1aa49fcb6068c10bdab13a7cfa97241c27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structSystemMemoryInfo_1aa49fcb6068c10bdab13a7cfa97241c27" kindref="member">heapFragments</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="203" refid="structSystemMemoryInfo_1a12ed83e6ef3ab65b2e708eb7634ae3d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structSystemMemoryInfo_1a12ed83e6ef3ab65b2e708eb7634ae3d9" kindref="member">stackSize</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="204" refid="structSystemMemoryInfo_1a23c2b52b7aa05bdd6c8316280fafb35e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structSystemMemoryInfo_1a23c2b52b7aa05bdd6c8316280fafb35e" kindref="member">stackUsed</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205" refid="structSystemMemoryInfo_1aa09da446795f6a14640ac228f8775332" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structSystemMemoryInfo_1aa09da446795f6a14640ac228f8775332" kindref="member">stackFree</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="206" refid="structSystemMemoryInfo_1ab4646e94bacfe136033551f29c88127f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structSystemMemoryInfo_1ab4646e94bacfe136033551f29c88127f" kindref="member">totalTasks</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="207" refid="structSystemMemoryInfo_1ad53218d4a3a0bd2bf27ee57618c502f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structSystemMemoryInfo_1ad53218d4a3a0bd2bf27ee57618c502f9" kindref="member">taskMemory</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208" refid="structSystemMemoryInfo_1af922c19a62e2db75d2d35abc96282760" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structSystemMemoryInfo_1af922c19a62e2db75d2d35abc96282760" kindref="member">activeMessages</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="209" refid="structSystemMemoryInfo_1a76bfcb475e0cfe6757e0fbbc04ad371e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structSystemMemoryInfo_1a76bfcb475e0cfe6757e0fbbc04ad371e" kindref="member">messageMemory</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="210" refid="structSystemMemoryInfo_1ae527fbdfcb22a4136b2f6f24d60c895a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structSystemMemoryInfo_1ae527fbdfcb22a4136b2f6f24d60c895a" kindref="member">flashUsed</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="211" refid="structSystemMemoryInfo_1abdbd97bb0a5a2fece0b70320ccedffc4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structSystemMemoryInfo_1abdbd97bb0a5a2fece0b70320ccedffc4" kindref="member">flashFree</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="212" refid="structSystemMemoryInfo_1a863feffbb30f9ba2b8bf031421830f31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structSystemMemoryInfo_1a863feffbb30f9ba2b8bf031421830f31" kindref="member">eepromUsed</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213" refid="structSystemMemoryInfo_1afbf8d2df35ecd00576f480561255f04d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structSystemMemoryInfo_1afbf8d2df35ecd00576f480561255f04d" kindref="member">eepromFree</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal">};</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="structTaskMemoryInfo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structTaskMemoryInfo" kindref="compound">TaskMemoryInfo</ref></highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="223" refid="structTaskMemoryInfo_1a6ccb06721fe721014762215555523d65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structTaskMemoryInfo_1a6ccb06721fe721014762215555523d65" kindref="member">task_id</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224" refid="structTaskMemoryInfo_1a455ea7f69c1a9c3b898d5c8d40e0fac7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structTaskMemoryInfo_1a455ea7f69c1a9c3b898d5c8d40e0fac7" kindref="member">task_struct_size</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="225" refid="structTaskMemoryInfo_1a33936208344182c0cb2040787efaf117" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structTaskMemoryInfo_1a33936208344182c0cb2040787efaf117" kindref="member">subscription_size</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="226" refid="structTaskMemoryInfo_1afc06164ff4977316ba80890f78771b91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structTaskMemoryInfo_1afc06164ff4977316ba80890f78771b91" kindref="member">queue_size</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227" refid="structTaskMemoryInfo_1ae365acfa19af10f054aee062cfe3b824" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structTaskMemoryInfo_1ae365acfa19af10f054aee062cfe3b824" kindref="member">total_allocated</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal">};</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>==================<sp/>Timer<sp/>System<sp/>==================<sp/>*/</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="group__fsmos_1gaa273e9811fbe7bee8c5bc7ec1f5d0ec5" kindref="member">__attribute__</ref>((packed))<sp/>TimerT</highlight></codeline>
<codeline lineno="246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>startMs<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>durationMs<sp/>=<sp/>0;<sp/><sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startTimer(T<sp/>d);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isExpired()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal">};</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="FsmOS_8h_1a9f53b37c6d575f1b498359cc429740b0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="FsmOS_8h_1a9f53b37c6d575f1b498359cc429740b0" kindref="member">Timer8</ref><sp/>=<sp/>TimerT&lt;uint8_t&gt;;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="FsmOS_8h_1acc8d5d8e761e9ae66c17be7f7d8ff843" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="FsmOS_8h_1acc8d5d8e761e9ae66c17be7f7d8ff843" kindref="member">Timer16</ref><sp/>=<sp/>TimerT&lt;uint16_t&gt;;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="FsmOS_8h_1acce064b0f024fed7c7008c84a000538f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="FsmOS_8h_1acce064b0f024fed7c7008c84a000538f" kindref="member">Timer32</ref><sp/>=<sp/>TimerT&lt;uint32_t&gt;;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>==================<sp/>Message<sp/>System<sp/>==================<sp/>*/</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="group__fsmos_1gaa273e9811fbe7bee8c5bc7ec1f5d0ec5" kindref="member">__attribute__</ref>((packed))<sp/>MsgData</highlight></codeline>
<codeline lineno="295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>type;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>topic;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>arg;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>refCount;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="300"><highlight class="normal">};</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="classSharedMsg" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classSharedMsg" kindref="compound">SharedMsg</ref></highlight></codeline>
<codeline lineno="314"><highlight class="normal">{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSharedMsg_1a71c37ab34ce77dcdf80c756635b68ff2" kindref="member">SharedMsg</ref>();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classSharedMsg_1a71c37ab34ce77dcdf80c756635b68ff2" kindref="member">SharedMsg</ref>(MsgData<sp/>*data);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSharedMsg_1a71c37ab34ce77dcdf80c756635b68ff2" kindref="member">SharedMsg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSharedMsg" kindref="compound">SharedMsg</ref><sp/>&amp;other);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSharedMsg" kindref="compound">SharedMsg</ref><sp/>&amp;<ref refid="classSharedMsg_1ad7ce8df960b49c88f0d4264c23c93f81" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSharedMsg" kindref="compound">SharedMsg</ref><sp/>&amp;other);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSharedMsg_1a1819d3340c3fa3d00950eb087cd97131" kindref="member">~SharedMsg</ref>();</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>MsgData<sp/>*<ref refid="classSharedMsg_1aa20f39d8440882aa6260e5802833e67e" kindref="member">getData</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>MsgData<sp/>*<ref refid="classSharedMsg_1ae7a947149acda480996050de99ee1b88" kindref="member">operator-&gt;</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classSharedMsg_1aaba8448183f8a5204bd8bc887c7b4ec3" kindref="member">isValid</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="369" refid="classSharedMsg_1a53039c707f1dc8a52c05f33af2cb24ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>MsgData<sp/>*<ref refid="classSharedMsg_1a53039c707f1dc8a52c05f33af2cb24ea" kindref="member">msgData</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSharedMsg_1a458f5ccc07be87e716ef117e2eb0bce9" kindref="member">release</ref>();<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="371"><highlight class="normal">};</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="383" refid="classMsgDataPool" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classMsgDataPool" kindref="compound">MsgDataPool</ref></highlight></codeline>
<codeline lineno="384"><highlight class="normal">{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMsgDataPool_1a72b29d6cb8320d81b5b0d7304cf5dce2" kindref="member">MsgDataPool</ref>();</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMsgDataPool_1af2acf581af3a23b651a8985191415f4b" kindref="member">~MsgDataPool</ref>();</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" kindref="member">MsgData</ref><sp/>*<ref refid="classMsgDataPool_1a5249e1c96225998fac71ba67c691740d" kindref="member">allocate</ref>();</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMsgDataPool_1a9b78a83be33a8a2a938f576eee7a98ee" kindref="member">deallocate</ref>(<ref refid="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" kindref="member">MsgData</ref><sp/>*msg);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMsgDataPool_1aec9292e845c522cd14c90764b8bfc054" kindref="member">updateAdaptiveLimit</ref>();</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" kindref="member">uint8_t</ref><sp/><ref refid="classMsgDataPool_1a8d57ebaaeb9f6907fd2a6844d8611a68" kindref="member">getPoolSize</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" kindref="member">uint8_t</ref><sp/><ref refid="classMsgDataPool_1a78472476fea071173c12900e76bb5525" kindref="member">getPoolLimit</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" kindref="member">uint8_t</ref><sp/><ref refid="classMsgDataPool_1ab68fab96e5ad24d2879c0c852391d25e" kindref="member">getCurrentInUse</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classMsgDataPool_1aed7f37c999de507b0441f863a4942f2a" kindref="member">initialize</ref>();</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="444" refid="classMsgDataPool_1af8a8bed0618d0d7acccaf8f6c5256851" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" kindref="member">MsgData</ref><sp/>*<ref refid="classMsgDataPool_1af8a8bed0618d0d7acccaf8f6c5256851" kindref="member">pool</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="445" refid="classMsgDataPool_1aca5724c9ea65b870035798e3cca1149d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" kindref="member">uint8_t</ref><sp/><ref refid="classMsgDataPool_1aca5724c9ea65b870035798e3cca1149d" kindref="member">poolSize</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="446" refid="classMsgDataPool_1a25c6c977b1a8a1682d63b4d5e0281ee2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" kindref="member">uint8_t</ref><sp/><ref refid="classMsgDataPool_1a25c6c977b1a8a1682d63b4d5e0281ee2" kindref="member">poolLimit</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="447" refid="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" kindref="member">uint8_t</ref><sp/><ref refid="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" kindref="member">currentInUse</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="448" refid="classMsgDataPool_1a371ad52b35bd9e2e397abf1dabacc24e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" kindref="member">uint8_t</ref><sp/><ref refid="classMsgDataPool_1a371ad52b35bd9e2e397abf1dabacc24e" kindref="member">nextFree</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="449"><highlight class="normal">};</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>==================<sp/>Data<sp/>Structures<sp/>==================<sp/>*/</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="464" refid="classLinkedQueue" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classLinkedQueue" kindref="compound">LinkedQueue</ref></highlight></codeline>
<codeline lineno="465"><highlight class="normal">{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="470" refid="structLinkedQueue_1_1Node" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structLinkedQueue_1_1Node" kindref="compound">Node</ref></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="472" refid="structLinkedQueue_1_1Node_1abfc1309426317b5ec46b96ad93fa3615" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><ref refid="structLinkedQueue_1_1Node_1abfc1309426317b5ec46b96ad93fa3615" kindref="member">data</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="473" refid="structLinkedQueue_1_1Node_1a105896e21861dcb1bb7bcb5af3e5c9b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structLinkedQueue_1_1Node" kindref="compound">Node</ref><sp/>*<ref refid="structLinkedQueue_1_1Node_1a105896e21861dcb1bb7bcb5af3e5c9b2" kindref="member">next</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classLinkedQueue_1a4983be0b269558e5bb0f93d2ce084345" kindref="member">LinkedQueue</ref>();</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classLinkedQueue_1ad84250d452864b16e000f4d1ee6295f6" kindref="member">~LinkedQueue</ref>();</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classLinkedQueue_1a4983be0b269558e5bb0f93d2ce084345" kindref="member">LinkedQueue</ref>(<ref refid="classLinkedQueue" kindref="compound">LinkedQueue</ref><sp/>&amp;&amp;other)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classLinkedQueue_1ab2bb64be832ea8f62e76dc7fcbe1e9fb" kindref="member">push</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;item);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classLinkedQueue_1ae54fefdc687852e0465e414bbfadd138" kindref="member">pop</ref>(T<sp/>&amp;item);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classLinkedQueue_1af4554d6d9ca422c9332217fbbe054c06" kindref="member">isEmpty</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="classLinkedQueue_1a81123eba59f05b7218b756740cfb3fa6" kindref="member">getSize</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="522" refid="classLinkedQueue_1ab473bd215aaee5a68ed9535a9605e8be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structLinkedQueue_1_1Node" kindref="compound">Node</ref><sp/>*<ref refid="classLinkedQueue_1ab473bd215aaee5a68ed9535a9605e8be" kindref="member">head</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="523" refid="classLinkedQueue_1ad7eec3a18abedbe1e43f275ae2e37c20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structLinkedQueue_1_1Node" kindref="compound">Node</ref><sp/>*<ref refid="classLinkedQueue_1ad7eec3a18abedbe1e43f275ae2e37c20" kindref="member">tail</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="524" refid="classLinkedQueue_1a7f8ecf880cc644bd53a75551e96d0987" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="classLinkedQueue_1a7f8ecf880cc644bd53a75551e96d0987" kindref="member">count</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="525"><highlight class="normal">};</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>==================<sp/>Synchronization<sp/>Primitives<sp/>==================<sp/>*/</highlight></codeline>
<codeline lineno="540" refid="classMutex" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classMutex" kindref="compound">Mutex</ref></highlight></codeline>
<codeline lineno="541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMutex_1a593423d868daf926c7b0d63a833ae29a" kindref="member">Mutex</ref>();</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classMutex_1a25133a881d7392b966786263d41bde79" kindref="member">tryLock</ref>(uint8_t<sp/>task_id);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMutex_1ac72a20fa83ef3beb121bb11bb452e9cd" kindref="member">unlock</ref>(uint8_t<sp/>task_id);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classMutex_1ac54a451ca9a856271f5f434f1aaee3d5" kindref="member">isLocked</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="classMutex_1ae155c790be1a23e17700cd8b8c2636b4" kindref="member">getOwner</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="576" refid="classMutex_1a833a30ffb34001c68aa2a37570dbf56e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classMutex_1a833a30ffb34001c68aa2a37570dbf56e" kindref="member">locked</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="577" refid="classMutex_1ae818e65daf468eed3d03a3aad59e1281" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="classMutex_1ae818e65daf468eed3d03a3aad59e1281" kindref="member">owner_id</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="578"><highlight class="normal">};</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="590" refid="classSemaphore" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classSemaphore" kindref="compound">Semaphore</ref></highlight></codeline>
<codeline lineno="591"><highlight class="normal">{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSemaphore" kindref="compound">Semaphore</ref>(uint8_t<sp/>initial_count,<sp/>uint8_t<sp/><ref refid="classSemaphore_1a1851b2b206e6fe2fe6711bd8469e157e" kindref="member">max_count</ref>);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classSemaphore_1ab733c9bf26e7dd7e007c68ca27b8c06e" kindref="member">wait</ref>(uint8_t<sp/>task_id);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSemaphore_1a1d7c51da55f9ac913a6a711cb6d6e52a" kindref="member">signal</ref>();</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="classSemaphore_1a0c65b57daf4e089e6e6241f4669d6f1f" kindref="member">getCount</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="classSemaphore_1a5dc46274b490015edf89edf3048512a8" kindref="member">getMaxCount</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="626" refid="classSemaphore_1a3a416166d840dc83b6283b20bccd072a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="classSemaphore_1a3a416166d840dc83b6283b20bccd072a" kindref="member">count</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="627" refid="classSemaphore_1a1851b2b206e6fe2fe6711bd8469e157e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="classSemaphore_1a1851b2b206e6fe2fe6711bd8469e157e" kindref="member">max_count</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="628"><highlight class="normal">};</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>==================<sp/>Task<sp/>System<sp/>==================<sp/>*/</highlight></codeline>
<codeline lineno="648" refid="group__fsmos_1ga5c3f1eb0aa79f56d91fdbf8fd9f1b911" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="group__fsmos_1ga5c3f1eb0aa79f56d91fdbf8fd9f1b911" kindref="member">DEFAULT_TASK_MESSAGE_BUDGET</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="653" refid="classTask" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classTask" kindref="compound">Task</ref></highlight></codeline>
<codeline lineno="654"><highlight class="normal">{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classTask" kindref="compound">Task</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__FlashStringHelper<sp/>*<ref refid="classTask_1a7727703d676510926710ba56268959f0" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classTask_1a3ecf499ea35fb4a96853969a1e1cbbce" kindref="member">~Task</ref>();</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="672" refid="classTask_1a42a50afac20691fb27694ca04ccc4e90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="classTask_1a42a50afac20691fb27694ca04ccc4e90" kindref="member">getCreatedInstanceCount</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classTask_1abf8be7ba74ec27e72e25d2f2cd531d14" kindref="member">createdInstanceCount</ref>;<sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Task<sp/>lifecycle</highlight></codeline>
<codeline lineno="680" refid="classTask_1a05ad697fe4c99793e7af4dade75bad64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTask_1a05ad697fe4c99793e7af4dade75bad64" kindref="member">on_start</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="687" refid="classTask_1a399ff82ffe4b94a11cd8148987e38622" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTask_1a399ff82ffe4b94a11cd8148987e38622" kindref="member">step</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="694" refid="classTask_1a7eccc77f654e53524d3a07b1ef73c83c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTask_1a7eccc77f654e53524d3a07b1ef73c83c" kindref="member">on_stop</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="702" refid="classTask_1a25e697fa851318504170fc4f3edf8308" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTask_1a25e697fa851318504170fc4f3edf8308" kindref="member">on_msg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MsgData<sp/>&amp;msg)<sp/>{}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Task<sp/>control</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTask_1a5d6a1d3c6cd5b587d2414737fab9f3ed" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTask_1aba5eb3d6c2a034aa0e319383fbec68c4" kindref="member">stop</ref>();</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTask_1ae95f8af6f74b4c956b82698b98454cd2" kindref="member">suspend</ref>();</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTask_1a8fc7f3a2f5ebd910f22d1134d0dfcb2f" kindref="member">resume</ref>();</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTask_1a4401622acef8826077250b6b9e24e477" kindref="member">terminate</ref>();</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Task<sp/>configuration</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTask_1a77d95e30aaab4ef098b94724c278ecd1" kindref="member">setPeriod</ref>(uint16_t<sp/>period_ms);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="classTask_1aa096c58dddc4fb8f7f8d5f40e1815d2d" kindref="member">getPeriod</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Task<sp/>priority</highlight></codeline>
<codeline lineno="754" refid="classTask_1a698d2efb6569ff0ae099fff3e661592a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classTask_1a698d2efb6569ff0ae099fff3e661592a" kindref="member">Priority</ref></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="756" refid="classTask_1a698d2efb6569ff0ae099fff3e661592aaa84058a0059d6f1f6d52d5e1a3ad5d0e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTask_1a698d2efb6569ff0ae099fff3e661592aaa84058a0059d6f1f6d52d5e1a3ad5d0e" kindref="member">PRIORITY_LOWEST</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="757" refid="classTask_1a698d2efb6569ff0ae099fff3e661592aa341b0650b5a4ad3c4b67c2610983f5a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTask_1a698d2efb6569ff0ae099fff3e661592aa341b0650b5a4ad3c4b67c2610983f5a9" kindref="member">PRIORITY_LOW</ref><sp/>=<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="758" refid="classTask_1a698d2efb6569ff0ae099fff3e661592aad68a5695d26142c2e09e4e2dc7104609" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTask_1a698d2efb6569ff0ae099fff3e661592aad68a5695d26142c2e09e4e2dc7104609" kindref="member">PRIORITY_NORMAL</ref><sp/>=<sp/>2,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="759" refid="classTask_1a698d2efb6569ff0ae099fff3e661592aa9366f3aad1454df01800061338e20de3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTask_1a698d2efb6569ff0ae099fff3e661592aa9366f3aad1454df01800061338e20de3" kindref="member">PRIORITY_HIGH</ref><sp/>=<sp/>3,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="760" refid="classTask_1a698d2efb6569ff0ae099fff3e661592aa1d85ce89b4f0af54b760b451fdcba98b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTask_1a698d2efb6569ff0ae099fff3e661592aa1d85ce89b4f0af54b760b451fdcba98b" kindref="member">PRIORITY_HIGHEST</ref><sp/>=<sp/>4,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="761" refid="classTask_1a698d2efb6569ff0ae099fff3e661592aa12f44ca59e3209d2f8412d3cece7040f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTask_1a698d2efb6569ff0ae099fff3e661592aa12f44ca59e3209d2f8412d3cece7040f" kindref="member">PRIORITY_CRITICAL</ref><sp/>=<sp/>5,<sp/><sp/></highlight></codeline>
<codeline lineno="762" refid="classTask_1a698d2efb6569ff0ae099fff3e661592aa368bfd726b1ad3bc484b8964a8406cbc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTask_1a698d2efb6569ff0ae099fff3e661592aa368bfd726b1ad3bc484b8964a8406cbc" kindref="member">PRIORITY_REALTIME</ref><sp/>=<sp/>6,<sp/><sp/></highlight></codeline>
<codeline lineno="763" refid="classTask_1a698d2efb6569ff0ae099fff3e661592aa6df39fb55e727d8cb7efd26d8ab55dcf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTask_1a698d2efb6569ff0ae099fff3e661592aa6df39fb55e727d8cb7efd26d8ab55dcf" kindref="member">PRIORITY_SYSTEM</ref><sp/>=<sp/>7,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTask_1a698d2efb6569ff0ae099fff3e661592aad89ed562a84f46152688421db9eeb156" kindref="member">PRIORITY_MAX</ref><sp/>=<sp/>15<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="765" refid="classTask_1a698d2efb6569ff0ae099fff3e661592aad89ed562a84f46152688421db9eeb156" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTask_1ae7a47875b478833d9dae1b5117661ed4" kindref="member">setPriority</ref>(<ref refid="classTask_1a698d2efb6569ff0ae099fff3e661592a" kindref="member">Priority</ref><sp/>priority);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTask_1ae7a47875b478833d9dae1b5117661ed4" kindref="member">setPriority</ref>(uint8_t<sp/>priority);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="classTask_1aef8cf69a9b677977003d8b72d66d36d8" kindref="member">getPriority</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTask_1a871f04aee2f5a2a024c96b9b54aa5ba4" kindref="member">setMaxMessageBudget</ref>(uint8_t<sp/>budget);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="801" refid="group__fsmos_1gadf715a30a3759bfd0856f12cfdf29d0e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="group__fsmos_1gadf715a30a3759bfd0856f12cfdf29d0e" kindref="member">getMaxMessageBudget</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__fsmos_1ga5c3f1eb0aa79f56d91fdbf8fd9f1b911" kindref="member">DEFAULT_TASK_MESSAGE_BUDGET</ref>;<sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="807" refid="classTask_1aea07a4be09d08cb8b1afa1914ddc988c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="classTask_1aea07a4be09d08cb8b1afa1914ddc988c" kindref="member">getTaskStructSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*this);<sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="814" refid="classTask_1a23a424ff9d99ba56a2470d527552dc41" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="classTask_1a23a424ff9d99ba56a2470d527552dc41" kindref="member">getConfiguredMessageBudget</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classTask_1aceb872daf3ecd86b362df7bf2b19130f" kindref="member">maxMessageBudget</ref>;<sp/>}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Task<sp/>state</highlight></codeline>
<codeline lineno="820" refid="classTask_1afa88d99eb2a58c8f078a53f1195c53a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classTask_1afa88d99eb2a58c8f078a53f1195c53a8" kindref="member">State</ref></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="822" refid="classTask_1afa88d99eb2a58c8f078a53f1195c53a8a3ca0a562f7e0ec849ab64f47164b552e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTask_1afa88d99eb2a58c8f078a53f1195c53a8a3ca0a562f7e0ec849ab64f47164b552e" kindref="member">INACTIVE</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="823" refid="classTask_1afa88d99eb2a58c8f078a53f1195c53a8a5c1b2aafd7b0d425608d0481620e0827" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTask_1afa88d99eb2a58c8f078a53f1195c53a8a5c1b2aafd7b0d425608d0481620e0827" kindref="member">ACTIVE</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="824" refid="classTask_1afa88d99eb2a58c8f078a53f1195c53a8a695d6ccd154b43d39b21ff6c6848db53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTask_1afa88d99eb2a58c8f078a53f1195c53a8a695d6ccd154b43d39b21ff6c6848db53" kindref="member">SUSPENDED</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTask_1afa88d99eb2a58c8f078a53f1195c53a8a7a6d8686d5e5ecffdf01fdd137d7713e" kindref="member">TERMINATED</ref><sp/><sp/></highlight></codeline>
<codeline lineno="826" refid="classTask_1afa88d99eb2a58c8f078a53f1195c53a8a7a6d8686d5e5ecffdf01fdd137d7713e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTask_1afa88d99eb2a58c8f078a53f1195c53a8" kindref="member">State</ref><sp/><ref refid="classTask_1acccd11864edfa1abbb15ff43008a17ec" kindref="member">getState</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTask_1a7a79169eed523ffdafa76f3c9d07ff27" kindref="member">setState</ref>(<ref refid="classTask_1afa88d99eb2a58c8f078a53f1195c53a8" kindref="member">State</ref><sp/>newState);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classTask_1af770c80b9b06c6f314441144dcb6b117" kindref="member">checkState</ref>(<ref refid="classTask_1afa88d99eb2a58c8f078a53f1195c53a8" kindref="member">State</ref><sp/>expected)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classTask_1a14f40317936f729e291a81fcf4426466" kindref="member">isActive</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classTask_1abee024294d3599db8917a96cab0a55f2" kindref="member">isInactive</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Task<sp/>identification</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="classTask_1a548d620b8f5d7490b8cdc235dbfdf6eb" kindref="member">getId</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__FlashStringHelper<sp/>*<ref refid="classTask_1aae9b70f6c6542469cd8c3c122536964c" kindref="member">getName</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="875" refid="classTask_1a5a90bf718dcc0fad7285e1ae580d47df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__FlashStringHelper<sp/>*<ref refid="classTask_1a5a90bf718dcc0fad7285e1ae580d47df" kindref="member">readTaskName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classTask" kindref="compound">Task</ref><sp/>*t)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t<sp/>?<sp/>t-&gt;<ref refid="classTask_1aae9b70f6c6542469cd8c3c122536964c" kindref="member">getName</ref>()<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTask_1a955e48a4143b0e140a552fa25f4500c9" kindref="member">setName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__FlashStringHelper<sp/>*<ref refid="classTask_1a7727703d676510926710ba56268959f0" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Message<sp/>handling</highlight></codeline>
<codeline lineno="890" refid="classTask_1a9de158865a233e9bad155106a43a0eda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTask_1a9de158865a233e9bad155106a43a0eda" kindref="member">subscribe</ref>(uint8_t<sp/>topic)</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(topic<sp/>&lt;<sp/><ref refid="FsmOS_8h_1a91bc2cac3c4615c062e7524ba2ea2278" kindref="member">MAX_TOPICS</ref>)</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTask_1acae0e3e69ae99fa0f3ca9298e74c7236" kindref="member">subscribedTopics</ref><sp/>|=<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="FsmOS_8h_1a21f8c866143c5f1a7f2f75113f2652cb" kindref="member">TopicBitfield</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1)<sp/>&lt;&lt;<sp/>topic);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="902" refid="classTask_1a01ab07b5bae2d59020bf4a4b613e03f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTask_1a01ab07b5bae2d59020bf4a4b613e03f7" kindref="member">unsubscribe</ref>(uint8_t<sp/>topic)</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(topic<sp/>&lt;<sp/><ref refid="FsmOS_8h_1a91bc2cac3c4615c062e7524ba2ea2278" kindref="member">MAX_TOPICS</ref>)</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTask_1acae0e3e69ae99fa0f3ca9298e74c7236" kindref="member">subscribedTopics</ref><sp/>&amp;=<sp/>~(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="FsmOS_8h_1a21f8c866143c5f1a7f2f75113f2652cb" kindref="member">TopicBitfield</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1)<sp/>&lt;&lt;<sp/>topic);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="915" refid="classTask_1a1f356af32a2d49b158ead810225d00be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classTask_1a1f356af32a2d49b158ead810225d00be" kindref="member">isSubscribedToTopic</ref>(uint8_t<sp/>topic)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="916"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(topic<sp/>&gt;=<sp/><ref refid="FsmOS_8h_1a91bc2cac3c4615c062e7524ba2ea2278" kindref="member">MAX_TOPICS</ref>)</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classTask_1acae0e3e69ae99fa0f3ca9298e74c7236" kindref="member">subscribedTopics</ref><sp/>&amp;<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="FsmOS_8h_1a21f8c866143c5f1a7f2f75113f2652cb" kindref="member">TopicBitfield</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1)<sp/>&lt;&lt;<sp/>topic))<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="928" refid="classTask_1a19466fe8b3653fd07f81dc45ae0a7a5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="classTask_1a19466fe8b3653fd07f81dc45ae0a7a5d" kindref="member">getTopicCount</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="929"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TOPIC_BITFIELD_SIZE<sp/>&lt;=<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__builtin_popcount(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classTask_1acae0e3e69ae99fa0f3ca9298e74c7236" kindref="member">subscribedTopics</ref>));</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>TOPIC_BITFIELD_SIZE<sp/>&lt;=<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__builtin_popcount(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint16_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classTask_1acae0e3e69ae99fa0f3ca9298e74c7236" kindref="member">subscribedTopics</ref>));</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__builtin_popcountl(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classTask_1acae0e3e69ae99fa0f3ca9298e74c7236" kindref="member">subscribedTopics</ref>));</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTask_1a4b2cce5377f8ddf0cc29d00a3c58c1c0" kindref="member">publish</ref>(uint8_t<sp/>topic,<sp/>uint8_t<sp/>type,<sp/>uint16_t<sp/>arg<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTask_1adbd4d278e42780bd4b6c1d918d0f85c9" kindref="member">tell</ref>(uint8_t<sp/>task_id,<sp/>uint8_t<sp/>type,<sp/>uint16_t<sp/>arg<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Logging</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTask_1a8bc9456ebb7dfbb657f040320af1a6ef" kindref="member">log</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__FlashStringHelper<sp/>*msg);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTask_1aa961a934509f354a023b8f32d3656e95" kindref="member">logDebug</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__FlashStringHelper<sp/>*msg);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTask_1a24f4e032e0dd55e6e2e7ef44c715e9ca" kindref="member">logInfo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__FlashStringHelper<sp/>*msg);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTask_1a36592cc85ff1d08bf6cb2442055188f6" kindref="member">logWarn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__FlashStringHelper<sp/>*msg);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTask_1aa4c091b4c65870bd83c6111d23ecee21" kindref="member">logError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__FlashStringHelper<sp/>*msg);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Timer<sp/>utility<sp/>methods</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="classTask_1a9fb78213d87aed4408f9c792fc1ade97" kindref="member">createTimerTyped</ref>(uint32_t<sp/>duration_ms)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTask_1a8c07bf11aa75929d4028b1035e71dac7" kindref="member">processMessages</ref>();</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Task<sp/>timing<sp/>monitoring<sp/>methods</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="classTask_1ac5ab04209706d6b3a0fdd5266dc0d97f" kindref="member">getDelayCount</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="classTask_1a7806ae077325d4970155cb65cace02c5" kindref="member">getMaxDelay</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="classTask_1aed0ad6765c8ca38f4104df0ad075be60" kindref="member">getScheduledTime</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="classTask_1ad17b132958585c85ceb73b077b52c099" kindref="member">getActualStartTime</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1030" refid="classTask_1afb88c77ea5daaefa6c8fa6bc5b9aa5c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classScheduler" kindref="compound">Scheduler</ref>;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032" refid="classTask_1a69b0d2b2a7231d2e2a2880b7cca136e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="classTask_1a69b0d2b2a7231d2e2a2880b7cca136e1" kindref="member">remainingTime</ref><sp/>=<sp/>0;<sp/><sp/></highlight></codeline>
<codeline lineno="1033" refid="classTask_1ab3ed971b7edebf924e2f1e06c4ce20d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="classTask_1ab3ed971b7edebf924e2f1e06c4ce20d2" kindref="member">periodMs</ref><sp/>=<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1034" refid="classTask_1a4dc17810637f6e3ea836f1068393a1c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="classTask_1a4dc17810637f6e3ea836f1068393a1c8" kindref="member">taskId</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1035" refid="classTask_1a57497b2437a803730f0e5adc8656fe97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="classTask_1a57497b2437a803730f0e5adc8656fe97" kindref="member">stateAndPriority</ref><sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="1036" refid="classTask_1a7727703d676510926710ba56268959f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__FlashStringHelper<sp/>*<ref refid="classTask_1a7727703d676510926710ba56268959f0" kindref="member">name</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Minimalist<sp/>task<sp/>statistics<sp/>(RAM<sp/>optimized)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039" refid="classTask_1a48485325ce407372474c73982690a0cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="classTask_1a48485325ce407372474c73982690a0cc" kindref="member">runCount</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1040" refid="classTask_1ad464cac8faf232328c59600a70bfa11c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="classTask_1ad464cac8faf232328c59600a70bfa11c" kindref="member">maxExecTimeUs</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1041" refid="classTask_1a54935dc05e1ff8ba284d18b84a057ac6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="classTask_1a54935dc05e1ff8ba284d18b84a057ac6" kindref="member">avgExecTimeUs</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Task<sp/>timing<sp/>monitoring</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044" refid="classTask_1ac78a2eb92ac06324535259def5fe2d43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="classTask_1ac78a2eb92ac06324535259def5fe2d43" kindref="member">scheduledTime</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1045" refid="classTask_1aba00d925c610ebb6ffce38ce7d550b33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="classTask_1aba00d925c610ebb6ffce38ce7d550b33" kindref="member">actualStartTime</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1046" refid="classTask_1aaf791abc71bca2ca62d29d2e155dc82c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="classTask_1aaf791abc71bca2ca62d29d2e155dc82c" kindref="member">delayCount</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1047" refid="classTask_1a82389ea58680f2ce8a0ffada921c3b6c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="classTask_1a82389ea58680f2ce8a0ffada921c3b6c" kindref="member">maxDelayMs</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049" refid="classTask_1acae0e3e69ae99fa0f3ca9298e74c7236" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="FsmOS_8h_1a21f8c866143c5f1a7f2f75113f2652cb" kindref="member">TopicBitfield</ref><sp/><ref refid="classTask_1acae0e3e69ae99fa0f3ca9298e74c7236" kindref="member">subscribedTopics</ref><sp/>=<sp/>0;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scheduler<sp/>gating:<sp/>maximum<sp/>messages<sp/>this<sp/>task<sp/>may<sp/>produce<sp/>in<sp/>a<sp/>single<sp/>step()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052" refid="classTask_1aceb872daf3ecd86b362df7bf2b19130f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="classTask_1aceb872daf3ecd86b362df7bf2b19130f" kindref="member">maxMessageBudget</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Global<sp/>count<sp/>of<sp/>created<sp/>Task<sp/>instances<sp/>(for<sp/>diagnostics/pool<sp/>sizing<sp/>hints)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055" refid="classTask_1abf8be7ba74ec27e72e25d2f2cd531d14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="classTask_1abf8be7ba74ec27e72e25d2f2cd531d14" kindref="member">createdInstanceCount</ref>;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>==================<sp/>Scheduler<sp/>System<sp/>==================<sp/>*/</highlight></codeline>
<codeline lineno="1073" refid="classScheduler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classScheduler" kindref="compound">Scheduler</ref></highlight></codeline>
<codeline lineno="1074"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classScheduler_1a3b61aac11466cd45ae42ab8c2b0013f6" kindref="member">Scheduler</ref>();</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classScheduler_1afc8187779b46f64039d3ffa58f0dbe51" kindref="member">~Scheduler</ref>();</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Task<sp/>management</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1a278e9940ce3dd1c708c5bd55b0e4059b" kindref="member">add</ref>(<ref refid="classTask" kindref="compound">Task</ref><sp/>*task);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1a303a5bd8d44b55803e6da7b4108401c2" kindref="member">remove</ref>(<ref refid="classTask" kindref="compound">Task</ref><sp/>*task);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1aaa234e0155e99b4fcbae695898663eea" kindref="member">removeAll</ref>();</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTask" kindref="compound">Task</ref><sp/>*<ref refid="classScheduler_1aabf3840938cc797555cdee88f5d19dd2" kindref="member">getTask</ref>(uint8_t<sp/>task_id);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121" refid="classScheduler_1a7a84b715133d1f8dd473e1511b2498a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="classScheduler_1a7a84b715133d1f8dd473e1511b2498a2" kindref="member">getTaskCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1a3e1f741da7d85ea80bb2f226d6457ab6" kindref="member">taskCount</ref>;<sp/>}</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="classScheduler_1acb0612339205f7e921b0034768dba4c5" kindref="member">getMaxTasks</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>System<sp/>control</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1ae552f70c9bc8fa9f7406e482d6a3769b" kindref="member">begin</ref>();</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1ae3fa321ea81e2c07e361147f4f0d606e" kindref="member">loopOnce</ref>();</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1a81607abe2905dee2e7cf9222a9e35b8f" kindref="member">loop</ref>();</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1a7ac470a1b0421f2db78e5b478a6b28b1" kindref="member">stop</ref>();</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Message<sp/>system</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1a6212cb4fdc7a3ed5c9e50e97729cff8d" kindref="member">publishMessage</ref>(uint8_t<sp/>topic,<sp/>uint8_t<sp/>type,<sp/>uint16_t<sp/>arg<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1a4f3960871e36fdf7234b151f81f04120" kindref="member">sendMessage</ref>(uint8_t<sp/>task_id,<sp/>uint8_t<sp/>type,<sp/>uint16_t<sp/>arg<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="classScheduler_1a86ddccd30b5b2af61d3cb76d53ca1b4b" kindref="member">getFreeQueueSlots</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>System<sp/>monitoring</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="classScheduler_1afe202befb3d6eac9dbb6acd1a4b09401" kindref="member">now</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="classScheduler_1a56c3c1a776927eeb7917e7b636a2e3ab" kindref="member">getFreeMemory</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Logging<sp/>system</highlight></codeline>
<codeline lineno="1195" refid="classScheduler_1ab2bd6aa333e3f108343fedb022eaca79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1ab2bd6aa333e3f108343fedb022eaca79" kindref="member">LogLevel</ref></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1197" refid="classScheduler_1ab2bd6aa333e3f108343fedb022eaca79ae533a07bf1ba23e55ae9769602ac74a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classScheduler_1ab2bd6aa333e3f108343fedb022eaca79ae533a07bf1ba23e55ae9769602ac74a7" kindref="member">LOG_DEBUG</ref><sp/>=<sp/>0,<sp/><sp/></highlight></codeline>
<codeline lineno="1198" refid="classScheduler_1ab2bd6aa333e3f108343fedb022eaca79ac50a6d9344241d486cea80292b5ba327" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classScheduler_1ab2bd6aa333e3f108343fedb022eaca79ac50a6d9344241d486cea80292b5ba327" kindref="member">LOG_INFO</ref><sp/>=<sp/>1,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1199" refid="classScheduler_1ab2bd6aa333e3f108343fedb022eaca79a43ae65cd6d87b4c15b8ddb2e1a110286" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classScheduler_1ab2bd6aa333e3f108343fedb022eaca79a43ae65cd6d87b4c15b8ddb2e1a110286" kindref="member">LOG_WARN</ref><sp/>=<sp/>2,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classScheduler_1ab2bd6aa333e3f108343fedb022eaca79aa56e45ee8b2ce204989dcede4bfa7805" kindref="member">LOG_ERROR</ref><sp/>=<sp/>3<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1201" refid="classScheduler_1ab2bd6aa333e3f108343fedb022eaca79aa56e45ee8b2ce204989dcede4bfa7805" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1a612b33338832de0d18ebf5859b3d7037" kindref="member">setLogLevel</ref>(<ref refid="classScheduler_1ab2bd6aa333e3f108343fedb022eaca79" kindref="member">LogLevel</ref><sp/>level);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1acaab28b4949d5a175212d134c04cf406" kindref="member">logMessage</ref>(<ref refid="classTask" kindref="compound">Task</ref><sp/>*task,<sp/><ref refid="classScheduler_1ab2bd6aa333e3f108343fedb022eaca79" kindref="member">LogLevel</ref><sp/>level,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1acaab28b4949d5a175212d134c04cf406" kindref="member">logMessage</ref>(<ref refid="classTask" kindref="compound">Task</ref><sp/>*task,<sp/><ref refid="classScheduler_1ab2bd6aa333e3f108343fedb022eaca79" kindref="member">LogLevel</ref><sp/>level,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__FlashStringHelper<sp/>*msg);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>System<sp/>callbacks</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1aab0e31c53df15af0ffbcd97d0510c9a2" kindref="member">onTick</ref>();</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Additional<sp/>diagnostic<sp/>methods</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1acd30d51a85bda0b42d8ee5253a42e9f4" kindref="member">getResetInfo</ref>(<ref refid="structResetInfo" kindref="compound">ResetInfo</ref><sp/>&amp;info);</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__fsmos_1gaf0e4bd86b7877a41cdb3452dec42904d" kindref="member">ResetCause</ref><sp/><ref refid="classScheduler_1a3d51992ab99d1b8e7055ac1b5b6445ea" kindref="member">getResetCause</ref>();</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="classScheduler_1a06438be1e9b5f2e9441b9c8c7c0d696e" kindref="member">getResetCauseFlags</ref>();</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1a1ad7c1772cfa11033b280e9b5de86d35" kindref="member">wasResetCause</ref>(<ref refid="group__fsmos_1gaf0e4bd86b7877a41cdb3452dec42904d" kindref="member">ResetCause</ref><sp/>cause);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1a4a491d929e3bee5c1bb5db4ad9a13dc3" kindref="member">getTaskStats</ref>(uint8_t<sp/>task_id,<sp/><ref refid="structTaskStats" kindref="compound">TaskStats</ref><sp/>&amp;stats);</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1a7c61b8b908a19416283e66c0fb076a40" kindref="member">getSystemMemoryInfo</ref>(<ref refid="structSystemMemoryInfo" kindref="compound">SystemMemoryInfo</ref><sp/>&amp;info);</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1a7170da5c7dfd33bd0a5bd6509538d84f" kindref="member">getTaskMemoryInfo</ref>(uint8_t<sp/>task_id,<sp/><ref refid="structTaskMemoryInfo" kindref="compound">TaskMemoryInfo</ref><sp/>&amp;info);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="classScheduler_1a69444823d403c8c84670eda2c0d594a4" kindref="member">getHeapFragmentation</ref>();</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1a26f332614d3126f5efdc42092138b0e6" kindref="member">getMemoryLeakStats</ref>(<ref refid="structMemoryStats" kindref="compound">MemoryStats</ref><sp/>&amp;stats);</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Additional<sp/>system<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1aaba5575657eb6345d1da5442be50f29c" kindref="member">enableWatchdog</ref>(uint8_t<sp/>timeout);</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1aa541036ba6db4765a2270d39f74c8758" kindref="member">feedWatchdog</ref>();</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1a1ded1b3c0e167dde6574bc8b4a0aca63" kindref="member">logFormatted</ref>(<ref refid="classTask" kindref="compound">Task</ref><sp/>*task,<sp/><ref refid="classScheduler_1ab2bd6aa333e3f108343fedb022eaca79" kindref="member">LogLevel</ref><sp/>level,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__FlashStringHelper<sp/>*format,<sp/>...);</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Task<sp/>timing<sp/>monitoring</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="classScheduler_1a2ccde4ea0d8e9a6996c4a897aee709e9" kindref="member">getMostDelayingTask</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1320" refid="classScheduler_1a9eb682b2716a34e7c3eb742782aa42e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTaskNode" kindref="compound">TaskNode</ref><sp/>*<ref refid="classScheduler_1a9eb682b2716a34e7c3eb742782aa42e2" kindref="member">taskHead</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1321" refid="classScheduler_1a7dbc17482550f15704cdc4e5bbdde2d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTaskNode" kindref="compound">TaskNode</ref><sp/>*<ref refid="classScheduler_1a7dbc17482550f15704cdc4e5bbdde2d9" kindref="member">taskTail</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Preallocated<sp/>node<sp/>pool<sp/>(initialized<sp/>on<sp/>first<sp/>add)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1323" refid="classScheduler_1ae4384c1ec8e5ef486776d6dc255a501a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTaskNode" kindref="compound">TaskNode</ref><sp/>*<ref refid="classScheduler_1ae4384c1ec8e5ef486776d6dc255a501a" kindref="member">freeTaskNodeHead</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="1324" refid="classScheduler_1a6f21f46d36e9c56a43fadfa6cc32aad7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1a6f21f46d36e9c56a43fadfa6cc32aad7" kindref="member">taskNodePoolInitialized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="1325" refid="classScheduler_1a72d0e1044f04173955e8783b8c1c9bb0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="classScheduler_1a72d0e1044f04173955e8783b8c1c9bb0" kindref="member">taskNodePoolCapacity</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1326" refid="classScheduler_1a3e1f741da7d85ea80bb2f226d6457ab6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="classScheduler_1a3e1f741da7d85ea80bb2f226d6457ab6" kindref="member">taskCount</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1327" refid="classScheduler_1a89473e616865792db671bdb2551aa338" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="classScheduler_1a89473e616865792db671bdb2551aa338" kindref="member">nextTaskId</ref><sp/>=<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329" refid="classScheduler_1a4025d35f57b05649764c44f3583fc2b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMsgDataPool" kindref="compound">MsgDataPool</ref><sp/><ref refid="classScheduler_1a4025d35f57b05649764c44f3583fc2b6" kindref="member">msgPool</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="1330" refid="classScheduler_1ac66364f021223ea49e76680b6dbcb56a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="classScheduler_1ac66364f021223ea49e76680b6dbcb56a" kindref="member">systemTime</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="1331" refid="classScheduler_1a8a0b0619fdfbda3338fc4964999b3ffd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1a8a0b0619fdfbda3338fc4964999b3ffd" kindref="member">running</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight></codeline>
<codeline lineno="1333" refid="classScheduler_1a720b2ff4a9e770649fe7b63d3098613d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classScheduler_1ab2bd6aa333e3f108343fedb022eaca79" kindref="member">LogLevel</ref><sp/><ref refid="classScheduler_1a720b2ff4a9e770649fe7b63d3098613d" kindref="member">currentLogLevel</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Task<sp/>timing<sp/>monitoring<sp/>(always<sp/>active)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1336" refid="classScheduler_1ac44741f6b01d7d8f914851b72f538617" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="classScheduler_1ac44741f6b01d7d8f914851b72f538617" kindref="member">lastExecutedTaskId</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1337" refid="classScheduler_1a4e2da8da4d0ca8ce7da09e92fcc04ffc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="classScheduler_1a4e2da8da4d0ca8ce7da09e92fcc04ffc" kindref="member">lastTaskEndTime</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339" refid="classScheduler_1adad5641aac7a2fe0b15a675a053fd4fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classSharedMsg" kindref="compound">SharedMsg</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1aef20dca5b8efdd71b4e91f91d5e0240f" kindref="member">processMessages</ref>();</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1a0a80134fcc4380c2577a5281352847eb" kindref="member">updateSystemTime</ref>();</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTask" kindref="compound">Task</ref><sp/>*<ref refid="classScheduler_1aafdaee288f465a178ef154e1fce57cf4" kindref="member">findNextTask</ref>();</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1a42e220f60192016791fa56855fcc8e46" kindref="member">executeTask</ref>(<ref refid="classTask" kindref="compound">Task</ref><sp/>*task);</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Refactored<sp/>helper<sp/>methods<sp/>for<sp/>executeTask</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1a22a32d58cf6898fff48880c5349c115f" kindref="member">handleTaskTiming</ref>(<ref refid="classTask" kindref="compound">Task</ref><sp/>*task,<sp/>uint32_t<sp/>currentTime);</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1a74551b047dfdd1675e53de6d1fc53ac7" kindref="member">executeTaskStep</ref>(<ref refid="classTask" kindref="compound">Task</ref><sp/>*task);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1a23437fce9b79f76f4534c402e832d4f5" kindref="member">updateTaskStatistics</ref>(<ref refid="classTask" kindref="compound">Task</ref><sp/>*task,<sp/>uint32_t<sp/>execStart);</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1a6ee466fc5e47301d6101c246c691c131" kindref="member">updateTimingVariables</ref>(<ref refid="classTask" kindref="compound">Task</ref><sp/>*task);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1af423092ed6af17160b11a8fab79c2eab" kindref="member">checkForTerminatedTask</ref>(<ref refid="classTask" kindref="compound">Task</ref><sp/>*task);</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1a40371a166759f310c2223ef082526829" kindref="member">logTaskDelay</ref>(<ref refid="classTask" kindref="compound">Task</ref><sp/>*task,<sp/>uint16_t<sp/>delayMs,<sp/>uint8_t<sp/>causingTaskId);</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Task<sp/>iteration<sp/>helpers</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Func&gt;</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1a3c9f6290c6ae7231b96c9ba6da36382b" kindref="member">forEachTask</ref>(Func<sp/>func);</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Func&gt;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTask" kindref="compound">Task</ref><sp/>*<ref refid="classScheduler_1ad2b77c7b7e929aad03ce0034f992d876" kindref="member">findTask</ref>(Func<sp/>predicate);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Memory<sp/>management<sp/>helpers</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTaskNode" kindref="compound">TaskNode</ref><sp/>*<ref refid="classScheduler_1a38cf4a79d14bd68514a26946b19d3d53" kindref="member">allocateTaskNode</ref>(<ref refid="classTask" kindref="compound">Task</ref><sp/>*task);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1a419ac926b5685ea804fe7eae086066e3" kindref="member">deallocateTaskNode</ref>(<ref refid="structTaskNode" kindref="compound">TaskNode</ref><sp/>*node);</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Logging<sp/>system<sp/>helpers</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1a1c6dd608a209d55e1925a4dbf5fb4344" kindref="member">logSystemEvent</ref>(<ref refid="classScheduler_1ab2bd6aa333e3f108343fedb022eaca79" kindref="member">LogLevel</ref><sp/>level,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__FlashStringHelper<sp/>*msg);</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1a46f4a6ce080b281fd2941aa35450c3c0" kindref="member">logTaskExecution</ref>(<ref refid="classTask" kindref="compound">Task</ref><sp/>*task,<sp/>uint32_t<sp/>execTime);</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>==================<sp/>Message<sp/>Queue<sp/>(bounded,<sp/>no<sp/>dynamic<sp/>allocation)<sp/>==================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1455" refid="structScheduler_1_1QueuedMessage" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structScheduler_1_1QueuedMessage" kindref="compound">QueuedMessage</ref></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1457" refid="structScheduler_1_1QueuedMessage_1ab2d20d6197328866badf5e94f048255c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structScheduler_1_1QueuedMessage_1ab2d20d6197328866badf5e94f048255c" kindref="member">targetTaskId</ref>;</highlight></codeline>
<codeline lineno="1458" refid="structScheduler_1_1QueuedMessage_1a4920af5804a48c59719261484553f169" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MsgData<sp/><ref refid="structScheduler_1_1QueuedMessage_1a4920af5804a48c59719261484553f169" kindref="member">msg</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>msg.data<sp/>points<sp/>to<sp/>buffer<sp/>when<sp/>dataSize<sp/>&gt;<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1459" refid="structScheduler_1_1QueuedMessage_1aa23777039e9446ad21fb93a6ec1e7e65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*<ref refid="structScheduler_1_1QueuedMessage_1aa23777039e9446ad21fb93a6ec1e7e65" kindref="member">buffer</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>retained<sp/>across<sp/>free-list<sp/>reuse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1460" refid="structScheduler_1_1QueuedMessage_1a79ba2cf8a493da73c1b64f9aa2549938" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structScheduler_1_1QueuedMessage_1a79ba2cf8a493da73c1b64f9aa2549938" kindref="member">capacity</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocated<sp/>size<sp/>of<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Linked-list<sp/>node<sp/>for<sp/>queued<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1464" refid="structScheduler_1_1MsgNode" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structScheduler_1_1MsgNode" kindref="compound">MsgNode</ref></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1466" refid="structScheduler_1_1MsgNode_1a91702c9faa02b67ac24d3924be9fdaee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structScheduler_1_1MsgNode" kindref="compound">MsgNode</ref><sp/>*<ref refid="structScheduler_1_1MsgNode_1a91702c9faa02b67ac24d3924be9fdaee" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="1467" refid="structScheduler_1_1MsgNode_1ab2623f2b15be317f6b54848af08ce97c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structScheduler_1_1QueuedMessage" kindref="compound">QueuedMessage</ref><sp/><ref refid="structScheduler_1_1MsgNode_1ab2623f2b15be317f6b54848af08ce97c" kindref="member">payload</ref>;</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Queue<sp/>(linked<sp/>list)<sp/>and<sp/>free-node<sp/>pool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471" refid="classScheduler_1afc800a55be0f3da82ef2e79dad96496d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structScheduler_1_1MsgNode" kindref="compound">MsgNode</ref><sp/>*<ref refid="classScheduler_1afc800a55be0f3da82ef2e79dad96496d" kindref="member">msgHead</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1472" refid="classScheduler_1a2503ab5f7acb13a3bd46f35036af3c02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structScheduler_1_1MsgNode" kindref="compound">MsgNode</ref><sp/>*<ref refid="classScheduler_1a2503ab5f7acb13a3bd46f35036af3c02" kindref="member">msgTail</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1473" refid="classScheduler_1a59fa5a068cd9a36672b39362982c2e97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structScheduler_1_1MsgNode" kindref="compound">MsgNode</ref><sp/>*<ref refid="classScheduler_1a59fa5a068cd9a36672b39362982c2e97" kindref="member">freeHead</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1474" refid="classScheduler_1a13367b7d53dc7bf804d9158e57bff5f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="classScheduler_1a13367b7d53dc7bf804d9158e57bff5f7" kindref="member">msgCount</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>enqueued<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1475" refid="classScheduler_1a15bd5f3410a22f750d9cc40579e11084" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="classScheduler_1a15bd5f3410a22f750d9cc40579e11084" kindref="member">totalNodes</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>total<sp/>nodes<sp/>allocated<sp/>into<sp/>pool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Grow<sp/>the<sp/>pool<sp/>by<sp/>a<sp/>chunk<sp/>(4<sp/>nodes)<sp/>up<sp/>to<sp/>MAX_MESSAGE_POOL_SIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1ad767f69dc7aab8c8bd0f15720693d1c2" kindref="member">allocateMsgNodesChunk</ref>();</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enqueue<sp/>a<sp/>message<sp/>destined<sp/>for<sp/>a<sp/>specific<sp/>task</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1acb1eb89034fcb709b8769ff9060063e5" kindref="member">enqueueQueuedMessage</ref>(uint8_t<sp/>targetTaskId,<sp/>uint8_t<sp/>topic,<sp/>uint8_t<sp/>type,<sp/>uint16_t<sp/>arg);</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dequeue<sp/>next<sp/>message<sp/>into<sp/>out;<sp/>returns<sp/>false<sp/>if<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1a13c5cff92aab0d7516c469cb7196c1ba" kindref="member">dequeueQueuedMessage</ref>(<ref refid="structScheduler_1_1QueuedMessage" kindref="compound">QueuedMessage</ref><sp/>&amp;out);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dequeue<sp/>and<sp/>return<sp/>node<sp/>itself;<sp/>caller<sp/>is<sp/>responsible<sp/>for<sp/>recycling<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1ac6614605ec1477ed4e44d93e613e3ed4" kindref="member">dequeueQueuedMessageNode</ref>(<ref refid="structScheduler_1_1MsgNode" kindref="compound">MsgNode</ref><sp/>*&amp;outNode);</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>TaskNode<sp/>pool<sp/>on<sp/>first<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1aaa8cc86207802e4a457202396b2f7441" kindref="member">initializeTaskNodePool</ref>();</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Acquire<sp/>a<sp/>node<sp/>from<sp/>pool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTaskNode" kindref="compound">TaskNode</ref><sp/>*<ref refid="classScheduler_1afa07db3c7014412af426ee1c304ebc4b" kindref="member">acquireTaskNode</ref>(<ref refid="classTask" kindref="compound">Task</ref><sp/>*task);</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>a<sp/>node<sp/>to<sp/>pool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1a2e5c9f7ad69391854d3a0dc2dd73f8b4" kindref="member">releaseTaskNode</ref>(<ref refid="structTaskNode" kindref="compound">TaskNode</ref><sp/>*node);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MsgNode<sp/>allocation<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structScheduler_1_1MsgNode" kindref="compound">MsgNode</ref><sp/>*<ref refid="classScheduler_1a45b70d5aed26ed5bf7c4d99d9df12966" kindref="member">allocateMsgNode</ref>();</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classScheduler_1a4d40d84c82a4b3f5366d1a7fe5fd9307" kindref="member">deallocateMsgNode</ref>(<ref refid="structScheduler_1_1MsgNode" kindref="compound">MsgNode</ref><sp/>*node);</highlight></codeline>
<codeline lineno="1499"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>==================<sp/>Global<sp/>Scheduler<sp/>Instance<sp/>==================<sp/>*/</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classScheduler" kindref="compound">Scheduler</ref><sp/><ref refid="group__fsmos_1ga990d37c1e9d0a35fead6ab92e0da955e" kindref="member">OS</ref>;</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>==================<sp/>System<sp/>Constants<sp/>==================<sp/>*/</highlight></codeline>
<codeline lineno="1515" refid="group__fsmos_1gac154c550db4c5b7fed1b1fd1e31a63ee" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__fsmos_1gac154c550db4c5b7fed1b1fd1e31a63ee" kindref="member">DEFAULT_TASK_PERIOD</ref><sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1521" refid="group__fsmos_1ga13157fca65016a2c6c913eff0119cf5c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__fsmos_1ga13157fca65016a2c6c913eff0119cf5c" kindref="member">MIN_TASK_PERIOD</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight></codeline>
<codeline lineno="1527" refid="group__fsmos_1gab0cd97b1506816b7e089447cd3430e65" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="group__fsmos_1gab0cd97b1506816b7e089447cd3430e65" kindref="member">MAX_TASK_PERIOD</ref><sp/>=<sp/>65535;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Backward<sp/>compatibility<sp/>direct<sp/>constants<sp/>removed;<sp/>use<sp/>Scheduler::LogLevel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>==================<sp/>Additional<sp/>Scheduler<sp/>Methods<sp/>==================<sp/>*/</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__fsmos_1gac6c8dbf1f133ab906d0f3490e0de5d74" kindref="member">logDebugf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__FlashStringHelper<sp/>*format,<sp/>...);</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__fsmos_1ga0fd80592a7d1d2fd9b1b52081a8d69cb" kindref="member">logInfof</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__FlashStringHelper<sp/>*format,<sp/>...);</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__fsmos_1ga58264bc1f779d2cd6cb6a8c733a17a21" kindref="member">logWarnf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__FlashStringHelper<sp/>*format,<sp/>...);</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__fsmos_1gade3c130d653bf887af5b2f6120f388ad" kindref="member">logErrorf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__FlashStringHelper<sp/>*format,<sp/>...);</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>FSMOS_H</highlight></codeline>
    </programlisting>
    <location file="FsmOS.h"/>
  </compounddef>
</doxygen>
