<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classMsgDataPool" kind="class" language="C++" prot="public">
    <compoundname>MsgDataPool</compoundname>
    <includes refid="FsmOS_8h" local="no">FsmOS.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classMsgDataPool_1af8a8bed0618d0d7acccaf8f6c5256851" prot="private" static="no" mutable="no">
        <type><ref refid="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" kindref="member">MsgData</ref> *</type>
        <definition>MsgData* MsgDataPool::pool</definition>
        <argsstring></argsstring>
        <name>pool</name>
        <qualifiedname>MsgDataPool::pool</qualifiedname>
        <briefdescription>
<para>Array of MsgData objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FsmOS.h" line="444" column="13" bodyfile="FsmOS.h" bodystart="444" bodyend="-1"/>
        <referencedby refid="classMsgDataPool_1a5249e1c96225998fac71ba67c691740d" compoundref="FsmOS_8cpp" startline="199" endline="234">allocate</referencedby>
        <referencedby refid="classMsgDataPool_1a9b78a83be33a8a2a938f576eee7a98ee" compoundref="FsmOS_8cpp" startline="236" endline="256">deallocate</referencedby>
        <referencedby refid="classMsgDataPool_1aed7f37c999de507b0441f863a4942f2a" compoundref="FsmOS_8cpp" startline="278" endline="306">initialize</referencedby>
        <referencedby refid="classMsgDataPool_1af2acf581af3a23b651a8985191415f4b" compoundref="FsmOS_8cpp" startline="190" endline="197">~MsgDataPool</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classMsgDataPool_1aca5724c9ea65b870035798e3cca1149d" prot="private" static="no" mutable="no">
        <type><ref refid="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" kindref="member">uint8_t</ref></type>
        <definition>uint8_t MsgDataPool::poolSize</definition>
        <argsstring></argsstring>
        <name>poolSize</name>
        <qualifiedname>MsgDataPool::poolSize</qualifiedname>
        <briefdescription>
<para>Current pool size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FsmOS.h" line="445" column="13" bodyfile="FsmOS.h" bodystart="445" bodyend="-1"/>
        <referencedby refid="classMsgDataPool_1a5249e1c96225998fac71ba67c691740d" compoundref="FsmOS_8cpp" startline="199" endline="234">allocate</referencedby>
        <referencedby refid="classMsgDataPool_1a8d57ebaaeb9f6907fd2a6844d8611a68" compoundref="FsmOS_8cpp" startline="272" endline="272">getPoolSize</referencedby>
        <referencedby refid="classMsgDataPool_1aed7f37c999de507b0441f863a4942f2a" compoundref="FsmOS_8cpp" startline="278" endline="306">initialize</referencedby>
        <referencedby refid="classMsgDataPool_1aec9292e845c522cd14c90764b8bfc054" compoundref="FsmOS_8cpp" startline="258" endline="270">updateAdaptiveLimit</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classMsgDataPool_1a25c6c977b1a8a1682d63b4d5e0281ee2" prot="private" static="no" mutable="no">
        <type><ref refid="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" kindref="member">uint8_t</ref></type>
        <definition>uint8_t MsgDataPool::poolLimit</definition>
        <argsstring></argsstring>
        <name>poolLimit</name>
        <qualifiedname>MsgDataPool::poolLimit</qualifiedname>
        <briefdescription>
<para>Maximum pool size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FsmOS.h" line="446" column="13" bodyfile="FsmOS.h" bodystart="446" bodyend="-1"/>
        <referencedby refid="classMsgDataPool_1a5249e1c96225998fac71ba67c691740d" compoundref="FsmOS_8cpp" startline="199" endline="234">allocate</referencedby>
        <referencedby refid="classMsgDataPool_1a78472476fea071173c12900e76bb5525" compoundref="FsmOS_8cpp" startline="274" endline="274">getPoolLimit</referencedby>
        <referencedby refid="classMsgDataPool_1aed7f37c999de507b0441f863a4942f2a" compoundref="FsmOS_8cpp" startline="278" endline="306">initialize</referencedby>
        <referencedby refid="classMsgDataPool_1aec9292e845c522cd14c90764b8bfc054" compoundref="FsmOS_8cpp" startline="258" endline="270">updateAdaptiveLimit</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" prot="private" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t MsgDataPool::currentInUse</definition>
        <argsstring></argsstring>
        <name>currentInUse</name>
        <qualifiedname>MsgDataPool::currentInUse</qualifiedname>
        <briefdescription>
<para>Number of messages currently in use. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FsmOS.h" line="447" column="13" bodyfile="FsmOS.h" bodystart="447" bodyend="-1"/>
        <referencedby refid="classMsgDataPool_1a5249e1c96225998fac71ba67c691740d" compoundref="FsmOS_8cpp" startline="199" endline="234">allocate</referencedby>
        <referencedby refid="classMsgDataPool_1a9b78a83be33a8a2a938f576eee7a98ee" compoundref="FsmOS_8cpp" startline="236" endline="256">deallocate</referencedby>
        <referencedby refid="classMsgDataPool_1ab68fab96e5ad24d2879c0c852391d25e" compoundref="FsmOS_8cpp" startline="276" endline="276">getCurrentInUse</referencedby>
        <referencedby refid="classMsgDataPool_1aed7f37c999de507b0441f863a4942f2a" compoundref="FsmOS_8cpp" startline="278" endline="306">initialize</referencedby>
        <referencedby refid="classMsgDataPool_1aec9292e845c522cd14c90764b8bfc054" compoundref="FsmOS_8cpp" startline="258" endline="270">updateAdaptiveLimit</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classMsgDataPool_1a371ad52b35bd9e2e397abf1dabacc24e" prot="private" static="no" mutable="no">
        <type><ref refid="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" kindref="member">uint8_t</ref></type>
        <definition>uint8_t MsgDataPool::nextFree</definition>
        <argsstring></argsstring>
        <name>nextFree</name>
        <qualifiedname>MsgDataPool::nextFree</qualifiedname>
        <briefdescription>
<para>Index of next free message. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FsmOS.h" line="448" column="13" bodyfile="FsmOS.h" bodystart="448" bodyend="-1"/>
        <referencedby refid="classMsgDataPool_1a5249e1c96225998fac71ba67c691740d" compoundref="FsmOS_8cpp" startline="199" endline="234">allocate</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classMsgDataPool_1a72b29d6cb8320d81b5b0d7304cf5dce2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MsgDataPool::MsgDataPool</definition>
        <argsstring>()</argsstring>
        <name>MsgDataPool</name>
        <qualifiedname>MsgDataPool::MsgDataPool</qualifiedname>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Initializes the message pool with default settings </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FsmOS.h" line="390" column="5" bodyfile="FsmOS.cpp" bodystart="183" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classMsgDataPool_1af2acf581af3a23b651a8985191415f4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MsgDataPool::~MsgDataPool</definition>
        <argsstring>()</argsstring>
        <name>~MsgDataPool</name>
        <qualifiedname>MsgDataPool::~MsgDataPool</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Frees all allocated memory </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FsmOS.h" line="396" column="5" bodyfile="FsmOS.cpp" bodystart="190" bodyend="197"/>
        <references refid="classMsgDataPool_1af8a8bed0618d0d7acccaf8f6c5256851" compoundref="FsmOS_8h" startline="444">pool</references>
      </memberdef>
      <memberdef kind="function" id="classMsgDataPool_1a5249e1c96225998fac71ba67c691740d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" kindref="member">MsgData</ref> *</type>
        <definition>MsgData * MsgDataPool::allocate</definition>
        <argsstring>()</argsstring>
        <name>allocate</name>
        <qualifiedname>MsgDataPool::allocate</qualifiedname>
        <briefdescription>
<para>Allocate a new MsgData from the pool. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Pointer to allocated MsgData, or nullptr if pool is full </para>
</simplesect>
<simplesect kind="note"><para>Returns nullptr if no memory available </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FsmOS.h" line="403" column="13" bodyfile="FsmOS.cpp" bodystart="199" bodyend="234"/>
        <references refid="structMemoryStats_1a66c3d8d757e4fcd55403c904fa4cb0d5" compoundref="FsmOS_8h" startline="119">MemoryStats::current_usage</references>
        <references refid="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" compoundref="FsmOS_8h" startline="447">currentInUse</references>
        <references refid="FsmOS_8cpp_1a4b161d5fdd35540a17153452e7c6af01" compoundref="FsmOS_8cpp" startline="50" endline="50">fsmos_memory_stats</references>
        <references refid="classMsgDataPool_1aed7f37c999de507b0441f863a4942f2a" compoundref="FsmOS_8cpp" startline="278" endline="306">initialize</references>
        <references refid="classMsgDataPool_1a371ad52b35bd9e2e397abf1dabacc24e" compoundref="FsmOS_8h" startline="448">nextFree</references>
        <references refid="structMemoryStats_1ab27f5b00f150919cd24828e4f3136357" compoundref="FsmOS_8h" startline="118">MemoryStats::peak_usage</references>
        <references refid="classMsgDataPool_1af8a8bed0618d0d7acccaf8f6c5256851" compoundref="FsmOS_8h" startline="444">pool</references>
        <references refid="classMsgDataPool_1a25c6c977b1a8a1682d63b4d5e0281ee2" compoundref="FsmOS_8h" startline="446">poolLimit</references>
        <references refid="classMsgDataPool_1aca5724c9ea65b870035798e3cca1149d" compoundref="FsmOS_8h" startline="445">poolSize</references>
        <references refid="structMemoryStats_1ad400667b2264e48d954b2feee8833f4a" compoundref="FsmOS_8h" startline="116">MemoryStats::total_allocated</references>
        <references refid="classMsgDataPool_1aec9292e845c522cd14c90764b8bfc054" compoundref="FsmOS_8cpp" startline="258" endline="270">updateAdaptiveLimit</references>
      </memberdef>
      <memberdef kind="function" id="classMsgDataPool_1a9b78a83be33a8a2a938f576eee7a98ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" kindref="member">void</ref></type>
        <definition>void MsgDataPool::deallocate</definition>
        <argsstring>(MsgData *msg)</argsstring>
        <name>deallocate</name>
        <qualifiedname>MsgDataPool::deallocate</qualifiedname>
        <param>
          <type><ref refid="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" kindref="member">MsgData</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Return a MsgData to the pool. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to MsgData to deallocate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Frees any associated data and returns MsgData to pool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FsmOS.h" line="410" column="10" bodyfile="FsmOS.cpp" bodystart="236" bodyend="256"/>
        <references refid="structMemoryStats_1a66c3d8d757e4fcd55403c904fa4cb0d5" compoundref="FsmOS_8h" startline="119">MemoryStats::current_usage</references>
        <references refid="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" compoundref="FsmOS_8h" startline="447">currentInUse</references>
        <references refid="FsmOS_8cpp_1a4b161d5fdd35540a17153452e7c6af01" compoundref="FsmOS_8cpp" startline="50" endline="50">fsmos_memory_stats</references>
        <references refid="classMsgDataPool_1af8a8bed0618d0d7acccaf8f6c5256851" compoundref="FsmOS_8h" startline="444">pool</references>
        <references refid="structMemoryStats_1aaefab979deb1c98218e9267d198de4fe" compoundref="FsmOS_8h" startline="117">MemoryStats::total_freed</references>
        <references refid="classMsgDataPool_1aec9292e845c522cd14c90764b8bfc054" compoundref="FsmOS_8cpp" startline="258" endline="270">updateAdaptiveLimit</references>
        <referencedby refid="classSharedMsg_1ad7ce8df960b49c88f0d4264c23c93f81" compoundref="FsmOS_8cpp" startline="121" endline="156">SharedMsg::operator=</referencedby>
        <referencedby refid="classSharedMsg_1a458f5ccc07be87e716ef117e2eb0bce9" compoundref="FsmOS_8cpp" startline="163" endline="174">SharedMsg::release</referencedby>
      </memberdef>
      <memberdef kind="function" id="classMsgDataPool_1aec9292e845c522cd14c90764b8bfc054" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" kindref="member">void</ref></type>
        <definition>void MsgDataPool::updateAdaptiveLimit</definition>
        <argsstring>()</argsstring>
        <name>updateAdaptiveLimit</name>
        <qualifiedname>MsgDataPool::updateAdaptiveLimit</qualifiedname>
        <briefdescription>
<para>Update adaptive pool limit based on usage. </para>
        </briefdescription>
        <detaileddescription>
<para>Automatically adjusts pool size for optimal performance </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FsmOS.h" line="416" column="10" bodyfile="FsmOS.cpp" bodystart="258" bodyend="270"/>
        <references refid="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" compoundref="FsmOS_8h" startline="447">currentInUse</references>
        <references refid="classMsgDataPool_1a25c6c977b1a8a1682d63b4d5e0281ee2" compoundref="FsmOS_8h" startline="446">poolLimit</references>
        <references refid="classMsgDataPool_1aca5724c9ea65b870035798e3cca1149d" compoundref="FsmOS_8h" startline="445">poolSize</references>
        <referencedby refid="classMsgDataPool_1a5249e1c96225998fac71ba67c691740d" compoundref="FsmOS_8cpp" startline="199" endline="234">allocate</referencedby>
        <referencedby refid="classMsgDataPool_1a9b78a83be33a8a2a938f576eee7a98ee" compoundref="FsmOS_8cpp" startline="236" endline="256">deallocate</referencedby>
      </memberdef>
      <memberdef kind="function" id="classMsgDataPool_1a8d57ebaaeb9f6907fd2a6844d8611a68" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" kindref="member">uint8_t</ref></type>
        <definition>uint8_t MsgDataPool::getPoolSize</definition>
        <argsstring>() const</argsstring>
        <name>getPoolSize</name>
        <qualifiedname>MsgDataPool::getPoolSize</qualifiedname>
        <briefdescription>
<para>Get current pool size. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Current number of MsgData objects in pool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FsmOS.h" line="422" column="13" bodyfile="FsmOS.cpp" bodystart="272" bodyend="272"/>
        <references refid="classMsgDataPool_1aca5724c9ea65b870035798e3cca1149d" compoundref="FsmOS_8h" startline="445">poolSize</references>
      </memberdef>
      <memberdef kind="function" id="classMsgDataPool_1a78472476fea071173c12900e76bb5525" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" kindref="member">uint8_t</ref></type>
        <definition>uint8_t MsgDataPool::getPoolLimit</definition>
        <argsstring>() const</argsstring>
        <name>getPoolLimit</name>
        <qualifiedname>MsgDataPool::getPoolLimit</qualifiedname>
        <briefdescription>
<para>Get maximum pool limit. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Maximum number of MsgData objects allowed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FsmOS.h" line="428" column="13" bodyfile="FsmOS.cpp" bodystart="274" bodyend="274"/>
        <references refid="classMsgDataPool_1a25c6c977b1a8a1682d63b4d5e0281ee2" compoundref="FsmOS_8h" startline="446">poolLimit</references>
      </memberdef>
      <memberdef kind="function" id="classMsgDataPool_1ab68fab96e5ad24d2879c0c852391d25e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" kindref="member">uint8_t</ref></type>
        <definition>uint8_t MsgDataPool::getCurrentInUse</definition>
        <argsstring>() const</argsstring>
        <name>getCurrentInUse</name>
        <qualifiedname>MsgDataPool::getCurrentInUse</qualifiedname>
        <briefdescription>
<para>Get number of currently allocated messages. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Number of messages currently in use </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FsmOS.h" line="434" column="13" bodyfile="FsmOS.cpp" bodystart="276" bodyend="276"/>
        <references refid="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" compoundref="FsmOS_8h" startline="447">currentInUse</references>
      </memberdef>
      <memberdef kind="function" id="classMsgDataPool_1aed7f37c999de507b0441f863a4942f2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" kindref="member">bool</ref></type>
        <definition>bool MsgDataPool::initialize</definition>
        <argsstring>()</argsstring>
        <name>initialize</name>
        <qualifiedname>MsgDataPool::initialize</qualifiedname>
        <briefdescription>
<para>Initialize the message pool if not already initialized. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if pool was initialized successfully, false if already initialized or failed </para>
</simplesect>
<simplesect kind="note"><para>This method performs lazy initialization to avoid static allocation issues </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="FsmOS.h" line="441" column="10" bodyfile="FsmOS.cpp" bodystart="278" bodyend="306"/>
        <references refid="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" compoundref="FsmOS_8h" startline="447">currentInUse</references>
        <references refid="FsmOS_8cpp_1a4b161d5fdd35540a17153452e7c6af01" compoundref="FsmOS_8cpp" startline="50" endline="50">fsmos_memory_stats</references>
        <references refid="classScheduler_1ab2bd6aa333e3f108343fedb022eaca79aa56e45ee8b2ce204989dcede4bfa7805" compoundref="FsmOS_8h" startline="1200">Scheduler::LOG_ERROR</references>
        <references refid="classScheduler_1acaab28b4949d5a175212d134c04cf406" compoundref="FsmOS_8cpp" startline="1001" endline="1036">Scheduler::logMessage</references>
        <references refid="group__fsmos_1ga990d37c1e9d0a35fead6ab92e0da955e" compoundref="FsmOS_8cpp" startline="48">OS</references>
        <references refid="classMsgDataPool_1af8a8bed0618d0d7acccaf8f6c5256851" compoundref="FsmOS_8h" startline="444">pool</references>
        <references refid="classMsgDataPool_1a25c6c977b1a8a1682d63b4d5e0281ee2" compoundref="FsmOS_8h" startline="446">poolLimit</references>
        <references refid="classMsgDataPool_1aca5724c9ea65b870035798e3cca1149d" compoundref="FsmOS_8h" startline="445">poolSize</references>
        <references refid="structMemoryStats_1ad400667b2264e48d954b2feee8833f4a" compoundref="FsmOS_8h" startline="116">MemoryStats::total_allocated</references>
        <referencedby refid="classMsgDataPool_1a5249e1c96225998fac71ba67c691740d" compoundref="FsmOS_8cpp" startline="199" endline="234">allocate</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Memory pool for efficient MsgData allocation. </para>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classMsgDataPool" kindref="compound">MsgDataPool</ref> manages a pool of MsgData objects to avoid frequent memory allocation/deallocation. It uses an adaptive limit system to balance memory usage and performance.</para>
<para><simplesect kind="note"><para>The pool automatically adjusts its size based on usage patterns. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="FsmOS.h" line="383" column="1" bodyfile="FsmOS.h" bodystart="384" bodyend="449"/>
    <listofallmembers>
      <member refid="classMsgDataPool_1a5249e1c96225998fac71ba67c691740d" prot="public" virt="non-virtual"><scope>MsgDataPool</scope><name>allocate</name></member>
      <member refid="classMsgDataPool_1a0a148d6bfd58376877a0529f217ed33c" prot="private" virt="non-virtual"><scope>MsgDataPool</scope><name>currentInUse</name></member>
      <member refid="classMsgDataPool_1a9b78a83be33a8a2a938f576eee7a98ee" prot="public" virt="non-virtual"><scope>MsgDataPool</scope><name>deallocate</name></member>
      <member refid="classMsgDataPool_1ab68fab96e5ad24d2879c0c852391d25e" prot="public" virt="non-virtual"><scope>MsgDataPool</scope><name>getCurrentInUse</name></member>
      <member refid="classMsgDataPool_1a78472476fea071173c12900e76bb5525" prot="public" virt="non-virtual"><scope>MsgDataPool</scope><name>getPoolLimit</name></member>
      <member refid="classMsgDataPool_1a8d57ebaaeb9f6907fd2a6844d8611a68" prot="public" virt="non-virtual"><scope>MsgDataPool</scope><name>getPoolSize</name></member>
      <member refid="classMsgDataPool_1aed7f37c999de507b0441f863a4942f2a" prot="public" virt="non-virtual"><scope>MsgDataPool</scope><name>initialize</name></member>
      <member refid="classMsgDataPool_1a72b29d6cb8320d81b5b0d7304cf5dce2" prot="public" virt="non-virtual"><scope>MsgDataPool</scope><name>MsgDataPool</name></member>
      <member refid="classMsgDataPool_1a371ad52b35bd9e2e397abf1dabacc24e" prot="private" virt="non-virtual"><scope>MsgDataPool</scope><name>nextFree</name></member>
      <member refid="classMsgDataPool_1af8a8bed0618d0d7acccaf8f6c5256851" prot="private" virt="non-virtual"><scope>MsgDataPool</scope><name>pool</name></member>
      <member refid="classMsgDataPool_1a25c6c977b1a8a1682d63b4d5e0281ee2" prot="private" virt="non-virtual"><scope>MsgDataPool</scope><name>poolLimit</name></member>
      <member refid="classMsgDataPool_1aca5724c9ea65b870035798e3cca1149d" prot="private" virt="non-virtual"><scope>MsgDataPool</scope><name>poolSize</name></member>
      <member refid="classMsgDataPool_1aec9292e845c522cd14c90764b8bfc054" prot="public" virt="non-virtual"><scope>MsgDataPool</scope><name>updateAdaptiveLimit</name></member>
      <member refid="classMsgDataPool_1af2acf581af3a23b651a8985191415f4b" prot="public" virt="non-virtual"><scope>MsgDataPool</scope><name>~MsgDataPool</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
